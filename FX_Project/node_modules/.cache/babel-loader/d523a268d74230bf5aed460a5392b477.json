{"ast":null,"code":"import { __assign, __extends } from 'tslib';\nimport React from 'react';\nimport normalizeWheel from 'normalize-wheel';\n\n/**\r\n * Compute the dimension of the crop area based on media size,\r\n * aspect ratio and optionally rotation\r\n */\n\nfunction getCropSize(mediaWidth, mediaHeight, containerWidth, containerHeight, aspect, rotation) {\n  if (rotation === void 0) {\n    rotation = 0;\n  }\n  var _a = translateSize(mediaWidth, mediaHeight, rotation),\n    width = _a.width,\n    height = _a.height;\n  var fittingWidth = Math.min(width, containerWidth);\n  var fittingHeight = Math.min(height, containerHeight);\n  if (fittingWidth > fittingHeight * aspect) {\n    return {\n      width: fittingHeight * aspect,\n      height: fittingHeight\n    };\n  }\n  return {\n    width: fittingWidth,\n    height: fittingWidth / aspect\n  };\n}\n/**\r\n * Ensure a new media position stays in the crop area.\r\n */\n\nfunction restrictPosition(position, mediaSize, cropSize, zoom, rotation) {\n  if (rotation === void 0) {\n    rotation = 0;\n  }\n  var _a = translateSize(mediaSize.width, mediaSize.height, rotation),\n    width = _a.width,\n    height = _a.height;\n  return {\n    x: restrictPositionCoord(position.x, width, cropSize.width, zoom),\n    y: restrictPositionCoord(position.y, height, cropSize.height, zoom)\n  };\n}\nfunction restrictPositionCoord(position, mediaSize, cropSize, zoom) {\n  var maxPosition = mediaSize * zoom / 2 - cropSize / 2;\n  return Math.min(maxPosition, Math.max(position, -maxPosition));\n}\nfunction getDistanceBetweenPoints(pointA, pointB) {\n  return Math.sqrt(Math.pow(pointA.y - pointB.y, 2) + Math.pow(pointA.x - pointB.x, 2));\n}\nfunction getRotationBetweenPoints(pointA, pointB) {\n  return Math.atan2(pointB.y - pointA.y, pointB.x - pointA.x) * 180 / Math.PI;\n}\n/**\r\n * Compute the output cropped area of the media in percentages and pixels.\r\n * x/y are the top-left coordinates on the src media\r\n */\n\nfunction computeCroppedArea(crop, mediaSize, cropSize, aspect, zoom, rotation, restrictPosition) {\n  if (rotation === void 0) {\n    rotation = 0;\n  }\n  if (restrictPosition === void 0) {\n    restrictPosition = true;\n  } // if the media is rotated by the user, we cannot limit the position anymore\n  // as it might need to be negative.\n\n  var limitAreaFn = restrictPosition && rotation === 0 ? limitArea : noOp;\n  var croppedAreaPercentages = {\n    x: limitAreaFn(100, ((mediaSize.width - cropSize.width / zoom) / 2 - crop.x / zoom) / mediaSize.width * 100),\n    y: limitAreaFn(100, ((mediaSize.height - cropSize.height / zoom) / 2 - crop.y / zoom) / mediaSize.height * 100),\n    width: limitAreaFn(100, cropSize.width / mediaSize.width * 100 / zoom),\n    height: limitAreaFn(100, cropSize.height / mediaSize.height * 100 / zoom)\n  }; // we compute the pixels size naively\n\n  var widthInPixels = Math.round(limitAreaFn(mediaSize.naturalWidth, croppedAreaPercentages.width * mediaSize.naturalWidth / 100));\n  var heightInPixels = Math.round(limitAreaFn(mediaSize.naturalHeight, croppedAreaPercentages.height * mediaSize.naturalHeight / 100));\n  var isImgWiderThanHigh = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect; // then we ensure the width and height exactly match the aspect (to avoid rounding approximations)\n  // if the media is wider than high, when zoom is 0, the crop height will be equals to iamge height\n  // thus we want to compute the width from the height and aspect for accuracy.\n  // Otherwise, we compute the height from width and aspect.\n\n  var sizePixels = isImgWiderThanHigh ? {\n    width: Math.round(heightInPixels * aspect),\n    height: heightInPixels\n  } : {\n    width: widthInPixels,\n    height: Math.round(widthInPixels / aspect)\n  };\n  var croppedAreaPixels = __assign(__assign({}, sizePixels), {\n    x: Math.round(limitAreaFn(mediaSize.naturalWidth - sizePixels.width, croppedAreaPercentages.x * mediaSize.naturalWidth / 100)),\n    y: Math.round(limitAreaFn(mediaSize.naturalHeight - sizePixels.height, croppedAreaPercentages.y * mediaSize.naturalHeight / 100))\n  });\n  return {\n    croppedAreaPercentages: croppedAreaPercentages,\n    croppedAreaPixels: croppedAreaPixels\n  };\n}\n/**\r\n * Ensure the returned value is between 0 and max\r\n */\n\nfunction limitArea(max, value) {\n  return Math.min(max, Math.max(0, value));\n}\nfunction noOp(_max, value) {\n  return value;\n}\n/**\r\n * Compute the crop and zoom from the croppedAreaPixels\r\n */\n\nfunction getZoomFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize) {\n  var mediaZoom = mediaSize.width / mediaSize.naturalWidth;\n  if (cropSize) {\n    var isHeightMaxSize_1 = cropSize.height > cropSize.width;\n    return isHeightMaxSize_1 ? cropSize.height / mediaZoom / croppedAreaPixels.height : cropSize.width / mediaZoom / croppedAreaPixels.width;\n  }\n  var aspect = croppedAreaPixels.width / croppedAreaPixels.height;\n  var isHeightMaxSize = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect;\n  return isHeightMaxSize ? mediaSize.naturalHeight / croppedAreaPixels.height : mediaSize.naturalWidth / croppedAreaPixels.width;\n}\n/**\r\n * Compute the crop and zoom from the croppedAreaPixels\r\n */\n\nfunction getInitialCropFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize) {\n  var mediaZoom = mediaSize.width / mediaSize.naturalWidth;\n  var zoom = getZoomFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize);\n  var cropZoom = mediaZoom * zoom;\n  var crop = {\n    x: ((mediaSize.naturalWidth - croppedAreaPixels.width) / 2 - croppedAreaPixels.x) * cropZoom,\n    y: ((mediaSize.naturalHeight - croppedAreaPixels.height) / 2 - croppedAreaPixels.y) * cropZoom\n  };\n  return {\n    crop: crop,\n    zoom: zoom\n  };\n}\n/**\r\n * Return the point that is the center of point a and b\r\n */\n\nfunction getCenter(a, b) {\n  return {\n    x: (b.x + a.x) / 2,\n    y: (b.y + a.y) / 2\n  };\n}\n/**\r\n *\r\n * Returns an x,y point once rotated around xMid,yMid\r\n */\n\nfunction rotateAroundMidPoint(x, y, xMid, yMid, degrees) {\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var radian = degrees * Math.PI / 180; // Convert to radians\n  // Subtract midpoints, so that midpoint is translated to origin\n  // and add it in the end again\n\n  var xr = (x - xMid) * cos(radian) - (y - yMid) * sin(radian) + xMid;\n  var yr = (x - xMid) * sin(radian) + (y - yMid) * cos(radian) + yMid;\n  return [xr, yr];\n}\n/**\r\n * Returns the new bounding area of a rotated rectangle.\r\n */\n\nfunction translateSize(width, height, rotation) {\n  var centerX = width / 2;\n  var centerY = height / 2;\n  var outerBounds = [rotateAroundMidPoint(0, 0, centerX, centerY, rotation), rotateAroundMidPoint(width, 0, centerX, centerY, rotation), rotateAroundMidPoint(width, height, centerX, centerY, rotation), rotateAroundMidPoint(0, height, centerX, centerY, rotation)];\n  var minX = Math.min.apply(Math, outerBounds.map(function (p) {\n    return p[0];\n  }));\n  var maxX = Math.max.apply(Math, outerBounds.map(function (p) {\n    return p[0];\n  }));\n  var minY = Math.min.apply(Math, outerBounds.map(function (p) {\n    return p[1];\n  }));\n  var maxY = Math.max.apply(Math, outerBounds.map(function (p) {\n    return p[1];\n  }));\n  return {\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\n/**\r\n * Combine multiple class names into a single string.\r\n */\n\nfunction classNames() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  return args.filter(function (value) {\n    if (typeof value === 'string' && value.length > 0) {\n      return true;\n    }\n    return false;\n  }).join(' ').trim();\n}\nvar css_248z = \".reactEasyCrop_Container {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: hidden;\\n  user-select: none;\\n  touch-action: none;\\n  cursor: move;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.reactEasyCrop_Image,\\n.reactEasyCrop_Video {\\n  will-change: transform; /* this improves performances and prevent painting issues on iOS Chrome */\\n}\\n\\n.reactEasyCrop_Contain {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: auto;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n.reactEasyCrop_Cover_Horizontal {\\n  width: 100%;\\n  height: auto;\\n}\\n.reactEasyCrop_Cover_Vertical {\\n  width: auto;\\n  height: 100%;\\n}\\n\\n.reactEasyCrop_CropArea {\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  transform: translate(-50%, -50%);\\n  border: 1px solid rgba(255, 255, 255, 0.5);\\n  box-sizing: border-box;\\n  box-shadow: 0 0 0 9999em;\\n  color: rgba(0, 0, 0, 0.5);\\n  overflow: hidden;\\n}\\n\\n.reactEasyCrop_CropAreaRound {\\n  border-radius: 50%;\\n}\\n\\n.reactEasyCrop_CropAreaGrid::before {\\n  content: ' ';\\n  box-sizing: border-box;\\n  position: absolute;\\n  border: 1px solid rgba(255, 255, 255, 0.5);\\n  top: 0;\\n  bottom: 0;\\n  left: 33.33%;\\n  right: 33.33%;\\n  border-top: 0;\\n  border-bottom: 0;\\n}\\n\\n.reactEasyCrop_CropAreaGrid::after {\\n  content: ' ';\\n  box-sizing: border-box;\\n  position: absolute;\\n  border: 1px solid rgba(255, 255, 255, 0.5);\\n  top: 33.33%;\\n  bottom: 33.33%;\\n  left: 0;\\n  right: 0;\\n  border-left: 0;\\n  border-right: 0;\\n}\\n\";\nvar MIN_ZOOM = 1;\nvar MAX_ZOOM = 3;\nvar Cropper = /** @class */\nfunction (_super) {\n  __extends(Cropper, _super);\n  function Cropper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.imageRef = null;\n    _this.videoRef = null;\n    _this.containerRef = null;\n    _this.styleRef = null;\n    _this.containerRect = null;\n    _this.mediaSize = {\n      width: 0,\n      height: 0,\n      naturalWidth: 0,\n      naturalHeight: 0\n    };\n    _this.dragStartPosition = {\n      x: 0,\n      y: 0\n    };\n    _this.dragStartCrop = {\n      x: 0,\n      y: 0\n    };\n    _this.lastPinchDistance = 0;\n    _this.lastPinchRotation = 0;\n    _this.rafDragTimeout = null;\n    _this.rafPinchTimeout = null;\n    _this.wheelTimer = null;\n    _this.state = {\n      cropSize: null,\n      hasWheelJustStarted: false\n    }; // this is to prevent Safari on iOS >= 10 to zoom the page\n\n    _this.preventZoomSafari = function (e) {\n      return e.preventDefault();\n    };\n    _this.cleanEvents = function () {\n      document.removeEventListener('mousemove', _this.onMouseMove);\n      document.removeEventListener('mouseup', _this.onDragStopped);\n      document.removeEventListener('touchmove', _this.onTouchMove);\n      document.removeEventListener('touchend', _this.onDragStopped);\n    };\n    _this.clearScrollEvent = function () {\n      if (_this.containerRef) _this.containerRef.removeEventListener('wheel', _this.onWheel);\n      if (_this.wheelTimer) {\n        clearTimeout(_this.wheelTimer);\n      }\n    };\n    _this.onMediaLoad = function () {\n      _this.computeSizes();\n      _this.emitCropData();\n      _this.setInitialCrop();\n      if (_this.props.onMediaLoaded) {\n        _this.props.onMediaLoaded(_this.mediaSize);\n      }\n    };\n    _this.setInitialCrop = function () {\n      var _a = _this.props,\n        initialCroppedAreaPixels = _a.initialCroppedAreaPixels,\n        cropSize = _a.cropSize;\n      if (!initialCroppedAreaPixels) {\n        return;\n      }\n      var _b = getInitialCropFromCroppedAreaPixels(initialCroppedAreaPixels, _this.mediaSize, cropSize),\n        crop = _b.crop,\n        zoom = _b.zoom;\n      _this.props.onCropChange(crop);\n      _this.props.onZoomChange && _this.props.onZoomChange(zoom);\n    };\n    _this.computeSizes = function () {\n      var _a, _b, _c, _d, _e, _f;\n      var mediaRef = _this.imageRef || _this.videoRef;\n      if (mediaRef && _this.containerRef) {\n        _this.containerRect = _this.containerRef.getBoundingClientRect();\n        _this.mediaSize = {\n          width: mediaRef.offsetWidth,\n          height: mediaRef.offsetHeight,\n          naturalWidth: ((_a = _this.imageRef) === null || _a === void 0 ? void 0 : _a.naturalWidth) || ((_b = _this.videoRef) === null || _b === void 0 ? void 0 : _b.videoWidth) || 0,\n          naturalHeight: ((_c = _this.imageRef) === null || _c === void 0 ? void 0 : _c.naturalHeight) || ((_d = _this.videoRef) === null || _d === void 0 ? void 0 : _d.videoHeight) || 0\n        };\n        var cropSize = _this.props.cropSize ? _this.props.cropSize : getCropSize(mediaRef.offsetWidth, mediaRef.offsetHeight, _this.containerRect.width, _this.containerRect.height, _this.props.aspect, _this.props.rotation);\n        if (((_e = _this.state.cropSize) === null || _e === void 0 ? void 0 : _e.height) !== cropSize.height || ((_f = _this.state.cropSize) === null || _f === void 0 ? void 0 : _f.width) !== cropSize.width) {\n          _this.props.onCropSizeChange && _this.props.onCropSizeChange(cropSize);\n        }\n        _this.setState({\n          cropSize: cropSize\n        }, _this.recomputeCropPosition);\n      }\n    };\n    _this.onMouseDown = function (e) {\n      e.preventDefault();\n      document.addEventListener('mousemove', _this.onMouseMove);\n      document.addEventListener('mouseup', _this.onDragStopped);\n      _this.onDragStart(Cropper.getMousePoint(e));\n    };\n    _this.onMouseMove = function (e) {\n      return _this.onDrag(Cropper.getMousePoint(e));\n    };\n    _this.onTouchStart = function (e) {\n      document.addEventListener('touchmove', _this.onTouchMove, {\n        passive: false\n      }); // iOS 11 now defaults to passive: true\n\n      document.addEventListener('touchend', _this.onDragStopped);\n      if (e.touches.length === 2) {\n        _this.onPinchStart(e);\n      } else if (e.touches.length === 1) {\n        _this.onDragStart(Cropper.getTouchPoint(e.touches[0]));\n      }\n    };\n    _this.onTouchMove = function (e) {\n      // Prevent whole page from scrolling on iOS.\n      e.preventDefault();\n      if (e.touches.length === 2) {\n        _this.onPinchMove(e);\n      } else if (e.touches.length === 1) {\n        _this.onDrag(Cropper.getTouchPoint(e.touches[0]));\n      }\n    };\n    _this.onDragStart = function (_a) {\n      var _b, _c;\n      var x = _a.x,\n        y = _a.y;\n      _this.dragStartPosition = {\n        x: x,\n        y: y\n      };\n      _this.dragStartCrop = __assign({}, _this.props.crop);\n      (_c = (_b = _this.props).onInteractionStart) === null || _c === void 0 ? void 0 : _c.call(_b);\n    };\n    _this.onDrag = function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      if (_this.rafDragTimeout) window.cancelAnimationFrame(_this.rafDragTimeout);\n      _this.rafDragTimeout = window.requestAnimationFrame(function () {\n        if (!_this.state.cropSize) return;\n        if (x === undefined || y === undefined) return;\n        var offsetX = x - _this.dragStartPosition.x;\n        var offsetY = y - _this.dragStartPosition.y;\n        var requestedPosition = {\n          x: _this.dragStartCrop.x + offsetX,\n          y: _this.dragStartCrop.y + offsetY\n        };\n        var newPosition = _this.props.restrictPosition ? restrictPosition(requestedPosition, _this.mediaSize, _this.state.cropSize, _this.props.zoom, _this.props.rotation) : requestedPosition;\n        _this.props.onCropChange(newPosition);\n      });\n    };\n    _this.onDragStopped = function () {\n      var _a, _b;\n      _this.cleanEvents();\n      _this.emitCropData();\n      (_b = (_a = _this.props).onInteractionEnd) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    _this.onWheel = function (e) {\n      e.preventDefault();\n      var point = Cropper.getMousePoint(e);\n      var pixelY = normalizeWheel(e).pixelY;\n      var newZoom = _this.props.zoom - pixelY * _this.props.zoomSpeed / 200;\n      _this.setNewZoom(newZoom, point);\n      if (!_this.state.hasWheelJustStarted) {\n        _this.setState({\n          hasWheelJustStarted: true\n        }, function () {\n          var _a, _b;\n          return (_b = (_a = _this.props).onInteractionStart) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n      }\n      if (_this.wheelTimer) {\n        clearTimeout(_this.wheelTimer);\n      }\n      _this.wheelTimer = window.setTimeout(function () {\n        return _this.setState({\n          hasWheelJustStarted: false\n        }, function () {\n          var _a, _b;\n          return (_b = (_a = _this.props).onInteractionEnd) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n      }, 250);\n    };\n    _this.getPointOnContainer = function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      if (!_this.containerRect) {\n        throw new Error('The Cropper is not mounted');\n      }\n      return {\n        x: _this.containerRect.width / 2 - (x - _this.containerRect.left),\n        y: _this.containerRect.height / 2 - (y - _this.containerRect.top)\n      };\n    };\n    _this.getPointOnMedia = function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      var _b = _this.props,\n        crop = _b.crop,\n        zoom = _b.zoom;\n      return {\n        x: (x + crop.x) / zoom,\n        y: (y + crop.y) / zoom\n      };\n    };\n    _this.setNewZoom = function (zoom, point) {\n      if (!_this.state.cropSize || !_this.props.onZoomChange) return;\n      var zoomPoint = _this.getPointOnContainer(point);\n      var zoomTarget = _this.getPointOnMedia(zoomPoint);\n      var newZoom = Math.min(_this.props.maxZoom, Math.max(zoom, _this.props.minZoom));\n      var requestedPosition = {\n        x: zoomTarget.x * newZoom - zoomPoint.x,\n        y: zoomTarget.y * newZoom - zoomPoint.y\n      };\n      var newPosition = _this.props.restrictPosition ? restrictPosition(requestedPosition, _this.mediaSize, _this.state.cropSize, newZoom, _this.props.rotation) : requestedPosition;\n      _this.props.onCropChange(newPosition);\n      _this.props.onZoomChange(newZoom);\n    };\n    _this.getCropData = function () {\n      if (!_this.state.cropSize) {\n        return null;\n      } // this is to ensure the crop is correctly restricted after a zoom back (https://github.com/ricardo-ch/react-easy-crop/issues/6)\n\n      var restrictedPosition = _this.props.restrictPosition ? restrictPosition(_this.props.crop, _this.mediaSize, _this.state.cropSize, _this.props.zoom, _this.props.rotation) : _this.props.crop;\n      return computeCroppedArea(restrictedPosition, _this.mediaSize, _this.state.cropSize, _this.getAspect(), _this.props.zoom, _this.props.rotation, _this.props.restrictPosition);\n    };\n    _this.emitCropData = function () {\n      var cropData = _this.getCropData();\n      if (!cropData) return;\n      var croppedAreaPercentages = cropData.croppedAreaPercentages,\n        croppedAreaPixels = cropData.croppedAreaPixels;\n      if (_this.props.onCropComplete) {\n        _this.props.onCropComplete(croppedAreaPercentages, croppedAreaPixels);\n      }\n      if (_this.props.onCropAreaChange) {\n        _this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels);\n      }\n    };\n    _this.emitCropAreaChange = function () {\n      var cropData = _this.getCropData();\n      if (!cropData) return;\n      var croppedAreaPercentages = cropData.croppedAreaPercentages,\n        croppedAreaPixels = cropData.croppedAreaPixels;\n      if (_this.props.onCropAreaChange) {\n        _this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels);\n      }\n    };\n    _this.recomputeCropPosition = function () {\n      if (!_this.state.cropSize) return;\n      var newPosition = _this.props.restrictPosition ? restrictPosition(_this.props.crop, _this.mediaSize, _this.state.cropSize, _this.props.zoom, _this.props.rotation) : _this.props.crop;\n      _this.props.onCropChange(newPosition);\n      _this.emitCropData();\n    };\n    return _this;\n  }\n  Cropper.prototype.componentDidMount = function () {\n    window.addEventListener('resize', this.computeSizes);\n    if (this.containerRef) {\n      this.props.zoomWithScroll && this.containerRef.addEventListener('wheel', this.onWheel, {\n        passive: false\n      });\n      this.containerRef.addEventListener('gesturestart', this.preventZoomSafari);\n      this.containerRef.addEventListener('gesturechange', this.preventZoomSafari);\n    }\n    if (!this.props.disableAutomaticStylesInjection) {\n      this.styleRef = document.createElement('style');\n      this.styleRef.setAttribute('type', 'text/css');\n      this.styleRef.innerHTML = css_248z;\n      document.head.appendChild(this.styleRef);\n    } // when rendered via SSR, the image can already be loaded and its onLoad callback will never be called\n\n    if (this.imageRef && this.imageRef.complete) {\n      this.onMediaLoad();\n    }\n  };\n  Cropper.prototype.componentWillUnmount = function () {\n    var _a;\n    window.removeEventListener('resize', this.computeSizes);\n    if (this.containerRef) {\n      this.containerRef.removeEventListener('gesturestart', this.preventZoomSafari);\n      this.containerRef.removeEventListener('gesturechange', this.preventZoomSafari);\n    }\n    if (this.styleRef) {\n      (_a = this.styleRef.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this.styleRef);\n    }\n    this.cleanEvents();\n    this.props.zoomWithScroll && this.clearScrollEvent();\n  };\n  Cropper.prototype.componentDidUpdate = function (prevProps) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    if (prevProps.rotation !== this.props.rotation) {\n      this.computeSizes();\n      this.recomputeCropPosition();\n    } else if (prevProps.aspect !== this.props.aspect) {\n      this.computeSizes();\n    } else if (prevProps.zoom !== this.props.zoom) {\n      this.recomputeCropPosition();\n    } else if (((_a = prevProps.cropSize) === null || _a === void 0 ? void 0 : _a.height) !== ((_b = this.props.cropSize) === null || _b === void 0 ? void 0 : _b.height) || ((_c = prevProps.cropSize) === null || _c === void 0 ? void 0 : _c.width) !== ((_d = this.props.cropSize) === null || _d === void 0 ? void 0 : _d.width)) {\n      this.computeSizes();\n    } else if (((_e = prevProps.crop) === null || _e === void 0 ? void 0 : _e.x) !== ((_f = this.props.crop) === null || _f === void 0 ? void 0 : _f.x) || ((_g = prevProps.crop) === null || _g === void 0 ? void 0 : _g.y) !== ((_h = this.props.crop) === null || _h === void 0 ? void 0 : _h.y)) {\n      this.emitCropAreaChange();\n    }\n    if (prevProps.zoomWithScroll !== this.props.zoomWithScroll && this.containerRef) {\n      this.props.zoomWithScroll ? this.containerRef.addEventListener('wheel', this.onWheel, {\n        passive: false\n      }) : this.clearScrollEvent();\n    }\n    if (prevProps.video !== this.props.video) {\n      (_j = this.videoRef) === null || _j === void 0 ? void 0 : _j.load();\n    }\n  };\n  Cropper.prototype.getAspect = function () {\n    var _a = this.props,\n      cropSize = _a.cropSize,\n      aspect = _a.aspect;\n    if (cropSize) {\n      return cropSize.width / cropSize.height;\n    }\n    return aspect;\n  };\n  Cropper.prototype.onPinchStart = function (e) {\n    var pointA = Cropper.getTouchPoint(e.touches[0]);\n    var pointB = Cropper.getTouchPoint(e.touches[1]);\n    this.lastPinchDistance = getDistanceBetweenPoints(pointA, pointB);\n    this.lastPinchRotation = getRotationBetweenPoints(pointA, pointB);\n    this.onDragStart(getCenter(pointA, pointB));\n  };\n  Cropper.prototype.onPinchMove = function (e) {\n    var _this = this;\n    var pointA = Cropper.getTouchPoint(e.touches[0]);\n    var pointB = Cropper.getTouchPoint(e.touches[1]);\n    var center = getCenter(pointA, pointB);\n    this.onDrag(center);\n    if (this.rafPinchTimeout) window.cancelAnimationFrame(this.rafPinchTimeout);\n    this.rafPinchTimeout = window.requestAnimationFrame(function () {\n      var distance = getDistanceBetweenPoints(pointA, pointB);\n      var newZoom = _this.props.zoom * (distance / _this.lastPinchDistance);\n      _this.setNewZoom(newZoom, center);\n      _this.lastPinchDistance = distance;\n      var rotation = getRotationBetweenPoints(pointA, pointB);\n      var newRotation = _this.props.rotation + (rotation - _this.lastPinchRotation);\n      _this.props.onRotationChange && _this.props.onRotationChange(newRotation);\n      _this.lastPinchRotation = rotation;\n    });\n  };\n  Cropper.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      image = _a.image,\n      video = _a.video,\n      mediaProps = _a.mediaProps,\n      transform = _a.transform,\n      _b = _a.crop,\n      x = _b.x,\n      y = _b.y,\n      rotation = _a.rotation,\n      zoom = _a.zoom,\n      cropShape = _a.cropShape,\n      showGrid = _a.showGrid,\n      _c = _a.style,\n      containerStyle = _c.containerStyle,\n      cropAreaStyle = _c.cropAreaStyle,\n      mediaStyle = _c.mediaStyle,\n      _d = _a.classes,\n      containerClassName = _d.containerClassName,\n      cropAreaClassName = _d.cropAreaClassName,\n      mediaClassName = _d.mediaClassName,\n      objectFit = _a.objectFit;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseDown: this.onMouseDown,\n      onTouchStart: this.onTouchStart,\n      ref: function ref(el) {\n        return _this.containerRef = el;\n      },\n      \"data-testid\": \"container\",\n      style: containerStyle,\n      className: classNames('reactEasyCrop_Container', containerClassName)\n    }, image ? /*#__PURE__*/React.createElement(\"img\", __assign({\n      alt: \"\",\n      className: classNames('reactEasyCrop_Image', objectFit === 'contain' && 'reactEasyCrop_Contain', objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal', objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical', mediaClassName)\n    }, mediaProps, {\n      src: image,\n      ref: function ref(el) {\n        return _this.imageRef = el;\n      },\n      style: __assign(__assign({}, mediaStyle), {\n        transform: transform || \"translate(\" + x + \"px, \" + y + \"px) rotate(\" + rotation + \"deg) scale(\" + zoom + \")\"\n      }),\n      onLoad: this.onMediaLoad\n    })) : video && /*#__PURE__*/React.createElement(\"video\", __assign({\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      className: classNames('reactEasyCrop_Video', objectFit === 'contain' && 'reactEasyCrop_Contain', objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal', objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical', mediaClassName)\n    }, mediaProps, {\n      ref: function ref(el) {\n        return _this.videoRef = el;\n      },\n      onLoadedMetadata: this.onMediaLoad,\n      style: __assign(__assign({}, mediaStyle), {\n        transform: transform || \"translate(\" + x + \"px, \" + y + \"px) rotate(\" + rotation + \"deg) scale(\" + zoom + \")\"\n      }),\n      controls: false\n    }), (Array.isArray(video) ? video : [{\n      src: video\n    }]).map(function (item) {\n      return /*#__PURE__*/React.createElement(\"source\", __assign({\n        key: item.src\n      }, item));\n    })), this.state.cropSize && /*#__PURE__*/React.createElement(\"div\", {\n      style: __assign(__assign({}, cropAreaStyle), {\n        width: this.state.cropSize.width,\n        height: this.state.cropSize.height\n      }),\n      \"data-testid\": \"cropper\",\n      className: classNames('reactEasyCrop_CropArea', cropShape === 'round' && 'reactEasyCrop_CropAreaRound', showGrid && 'reactEasyCrop_CropAreaGrid', cropAreaClassName)\n    }));\n  };\n  Cropper.defaultProps = {\n    zoom: 1,\n    rotation: 0,\n    aspect: 4 / 3,\n    maxZoom: MAX_ZOOM,\n    minZoom: MIN_ZOOM,\n    cropShape: 'rect',\n    objectFit: 'contain',\n    showGrid: true,\n    style: {},\n    classes: {},\n    mediaProps: {},\n    zoomSpeed: 1,\n    restrictPosition: true,\n    zoomWithScroll: true\n  };\n  Cropper.getMousePoint = function (e) {\n    return {\n      x: Number(e.clientX),\n      y: Number(e.clientY)\n    };\n  };\n  Cropper.getTouchPoint = function (touch) {\n    return {\n      x: Number(touch.clientX),\n      y: Number(touch.clientY)\n    };\n  };\n  return Cropper;\n}(React.Component);\nexport default Cropper;","map":{"version":3,"sources":["../src/helpers.ts","../src/index.tsx"],"names":["getCropSize","mediaWidth","mediaHeight","containerWidth","containerHeight","aspect","width","height","translateSize","rotation","fittingWidth","Math","min","fittingHeight","restrictPosition","position","mediaSize","cropSize","zoom","x","restrictPositionCoord","y","maxPosition","max","getDistanceBetweenPoints","pointA","pointB","sqrt","pow","getRotationBetweenPoints","atan2","PI","computeCroppedArea","crop","limitAreaFn","limitArea","noOp","croppedAreaPercentages","widthInPixels","round","naturalWidth","heightInPixels","naturalHeight","isImgWiderThanHigh","sizePixels","croppedAreaPixels","value","_max","getZoomFromCroppedAreaPixels","mediaZoom","isHeightMaxSize_1","isHeightMaxSize","getInitialCropFromCroppedAreaPixels","cropZoom","getCenter","a","b","rotateAroundMidPoint","xMid","yMid","degrees","cos","sin","radian","xr","yr","centerX","centerY","outerBounds","minX","map","maxX","minY","maxY","classNames","filter","length","join","trim","MIN_ZOOM","MAX_ZOOM","__extends","Component","Cropper","maxZoom","minZoom","cropShape","objectFit","showGrid","style","classes","mediaProps","zoomSpeed","zoomWithScroll","_this","hasWheelJustStarted","window","addEventListener","computeSizes","containerRef","props","onWheel","passive","preventZoomSafari","disableAutomaticStylesInjection","styleRef","document","createElement","setAttribute","innerHTML","cssStyles","head","appendChild","imageRef","complete","onMediaLoad","removeEventListener","parentNode","removeChild","cleanEvents","clearScrollEvent","prevProps","recomputeCropPosition","emitCropAreaChange","video","videoRef","load","e","preventDefault","onMouseMove","onDragStopped","onTouchMove","wheelTimer","clearTimeout","emitCropData","setInitialCrop","onMediaLoaded","initialCroppedAreaPixels","onCropChange","onZoomChange","mediaRef","containerRect","getBoundingClientRect","offsetWidth","offsetHeight","videoWidth","videoHeight","state","onCropSizeChange","setState","Number","clientX","clientY","touch","onDragStart","getMousePoint","onDrag","touches","onPinchStart","getTouchPoint","onPinchMove","_a","dragStartPosition","dragStartCrop","onInteractionStart","rafDragTimeout","cancelAnimationFrame","requestAnimationFrame","undefined","offsetX","offsetY","requestedPosition","newPosition","onInteractionEnd","lastPinchDistance","lastPinchRotation","center","rafPinchTimeout","distance","newZoom","setNewZoom","newRotation","onRotationChange","point","normalizeWheel","pixelY","setTimeout","Error","left","top","zoomPoint","getPointOnContainer","zoomTarget","getPointOnMedia","restrictedPosition","getAspect","cropData","getCropData","onCropComplete","onCropAreaChange","image","transform","_b","_c","containerStyle","cropAreaStyle","mediaStyle","_d","containerClassName","cropAreaClassName","mediaClassName","onMouseDown","onTouchStart","ref","el","className","alt","src","onLoad","autoPlay","loop","muted","onLoadedMetadata","controls","Array","isArray","item","key"],"mappings":"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","sourcesContent":["import { Area, MediaSize, Point, Size } from './types'\n\n/**\n * Compute the dimension of the crop area based on media size,\n * aspect ratio and optionally rotation\n */\nexport function getCropSize(\n  mediaWidth: number,\n  mediaHeight: number,\n  containerWidth: number,\n  containerHeight: number,\n  aspect: number,\n  rotation = 0\n): Size {\n  const { width, height } = translateSize(mediaWidth, mediaHeight, rotation)\n  const fittingWidth = Math.min(width, containerWidth)\n  const fittingHeight = Math.min(height, containerHeight)\n\n  if (fittingWidth > fittingHeight * aspect) {\n    return {\n      width: fittingHeight * aspect,\n      height: fittingHeight,\n    }\n  }\n\n  return {\n    width: fittingWidth,\n    height: fittingWidth / aspect,\n  }\n}\n\n/**\n * Ensure a new media position stays in the crop area.\n */\nexport function restrictPosition(\n  position: Point,\n  mediaSize: Size,\n  cropSize: Size,\n  zoom: number,\n  rotation = 0\n): Point {\n  const { width, height } = translateSize(mediaSize.width, mediaSize.height, rotation)\n\n  return {\n    x: restrictPositionCoord(position.x, width, cropSize.width, zoom),\n    y: restrictPositionCoord(position.y, height, cropSize.height, zoom),\n  }\n}\n\nfunction restrictPositionCoord(\n  position: number,\n  mediaSize: number,\n  cropSize: number,\n  zoom: number\n): number {\n  const maxPosition = (mediaSize * zoom) / 2 - cropSize / 2\n  return Math.min(maxPosition, Math.max(position, -maxPosition))\n}\n\nexport function getDistanceBetweenPoints(pointA: Point, pointB: Point) {\n  return Math.sqrt(Math.pow(pointA.y - pointB.y, 2) + Math.pow(pointA.x - pointB.x, 2))\n}\n\nexport function getRotationBetweenPoints(pointA: Point, pointB: Point) {\n  return (Math.atan2(pointB.y - pointA.y, pointB.x - pointA.x) * 180) / Math.PI\n}\n\n/**\n * Compute the output cropped area of the media in percentages and pixels.\n * x/y are the top-left coordinates on the src media\n */\nexport function computeCroppedArea(\n  crop: Point,\n  mediaSize: MediaSize,\n  cropSize: Size,\n  aspect: number,\n  zoom: number,\n  rotation = 0,\n  restrictPosition = true\n): { croppedAreaPercentages: Area; croppedAreaPixels: Area } {\n  // if the media is rotated by the user, we cannot limit the position anymore\n  // as it might need to be negative.\n  const limitAreaFn = restrictPosition && rotation === 0 ? limitArea : noOp\n  const croppedAreaPercentages = {\n    x: limitAreaFn(\n      100,\n      (((mediaSize.width - cropSize.width / zoom) / 2 - crop.x / zoom) / mediaSize.width) * 100\n    ),\n    y: limitAreaFn(\n      100,\n      (((mediaSize.height - cropSize.height / zoom) / 2 - crop.y / zoom) / mediaSize.height) * 100\n    ),\n    width: limitAreaFn(100, ((cropSize.width / mediaSize.width) * 100) / zoom),\n    height: limitAreaFn(100, ((cropSize.height / mediaSize.height) * 100) / zoom),\n  }\n\n  // we compute the pixels size naively\n  const widthInPixels = Math.round(\n    limitAreaFn(\n      mediaSize.naturalWidth,\n      (croppedAreaPercentages.width * mediaSize.naturalWidth) / 100\n    )\n  )\n  const heightInPixels = Math.round(\n    limitAreaFn(\n      mediaSize.naturalHeight,\n      (croppedAreaPercentages.height * mediaSize.naturalHeight) / 100\n    )\n  )\n  const isImgWiderThanHigh = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect\n\n  // then we ensure the width and height exactly match the aspect (to avoid rounding approximations)\n  // if the media is wider than high, when zoom is 0, the crop height will be equals to iamge height\n  // thus we want to compute the width from the height and aspect for accuracy.\n  // Otherwise, we compute the height from width and aspect.\n  const sizePixels = isImgWiderThanHigh\n    ? {\n        width: Math.round(heightInPixels * aspect),\n        height: heightInPixels,\n      }\n    : {\n        width: widthInPixels,\n        height: Math.round(widthInPixels / aspect),\n      }\n  const croppedAreaPixels = {\n    ...sizePixels,\n    x: Math.round(\n      limitAreaFn(\n        mediaSize.naturalWidth - sizePixels.width,\n        (croppedAreaPercentages.x * mediaSize.naturalWidth) / 100\n      )\n    ),\n    y: Math.round(\n      limitAreaFn(\n        mediaSize.naturalHeight - sizePixels.height,\n        (croppedAreaPercentages.y * mediaSize.naturalHeight) / 100\n      )\n    ),\n  }\n  return { croppedAreaPercentages, croppedAreaPixels }\n}\n\n/**\n * Ensure the returned value is between 0 and max\n */\nfunction limitArea(max: number, value: number): number {\n  return Math.min(max, Math.max(0, value))\n}\n\nfunction noOp(_max: number, value: number) {\n  return value\n}\n\n/**\n * Compute the crop and zoom from the croppedAreaPixels\n */\nfunction getZoomFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize?: Size\n): number {\n  const mediaZoom = mediaSize.width / mediaSize.naturalWidth\n\n  if (cropSize) {\n    const isHeightMaxSize = cropSize.height > cropSize.width\n    return isHeightMaxSize\n      ? cropSize.height / mediaZoom / croppedAreaPixels.height\n      : cropSize.width / mediaZoom / croppedAreaPixels.width\n  }\n\n  const aspect = croppedAreaPixels.width / croppedAreaPixels.height\n  const isHeightMaxSize = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect\n  return isHeightMaxSize\n    ? mediaSize.naturalHeight / croppedAreaPixels.height\n    : mediaSize.naturalWidth / croppedAreaPixels.width\n}\n\n/**\n * Compute the crop and zoom from the croppedAreaPixels\n */\nexport function getInitialCropFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize?: Size\n): { crop: Point; zoom: number } {\n  const mediaZoom = mediaSize.width / mediaSize.naturalWidth\n\n  const zoom = getZoomFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize)\n\n  const cropZoom = mediaZoom * zoom\n\n  const crop = {\n    x: ((mediaSize.naturalWidth - croppedAreaPixels.width) / 2 - croppedAreaPixels.x) * cropZoom,\n    y: ((mediaSize.naturalHeight - croppedAreaPixels.height) / 2 - croppedAreaPixels.y) * cropZoom,\n  }\n  return { crop, zoom }\n}\n\n/**\n * Return the point that is the center of point a and b\n */\nexport function getCenter(a: Point, b: Point): Point {\n  return {\n    x: (b.x + a.x) / 2,\n    y: (b.y + a.y) / 2,\n  }\n}\n\n/**\n *\n * Returns an x,y point once rotated around xMid,yMid\n */\nexport function rotateAroundMidPoint(\n  x: number,\n  y: number,\n  xMid: number,\n  yMid: number,\n  degrees: number\n): [number, number] {\n  const cos = Math.cos\n  const sin = Math.sin\n  const radian = (degrees * Math.PI) / 180 // Convert to radians\n  // Subtract midpoints, so that midpoint is translated to origin\n  // and add it in the end again\n  const xr = (x - xMid) * cos(radian) - (y - yMid) * sin(radian) + xMid\n  const yr = (x - xMid) * sin(radian) + (y - yMid) * cos(radian) + yMid\n\n  return [xr, yr]\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function translateSize(width: number, height: number, rotation: number): Size {\n  const centerX = width / 2\n  const centerY = height / 2\n\n  const outerBounds = [\n    rotateAroundMidPoint(0, 0, centerX, centerY, rotation),\n    rotateAroundMidPoint(width, 0, centerX, centerY, rotation),\n    rotateAroundMidPoint(width, height, centerX, centerY, rotation),\n    rotateAroundMidPoint(0, height, centerX, centerY, rotation),\n  ]\n\n  const minX = Math.min(...outerBounds.map(p => p[0]))\n  const maxX = Math.max(...outerBounds.map(p => p[0]))\n  const minY = Math.min(...outerBounds.map(p => p[1]))\n  const maxY = Math.max(...outerBounds.map(p => p[1]))\n\n  return { width: maxX - minX, height: maxY - minY }\n}\n\n/**\n * Combine multiple class names into a single string.\n */\nexport function classNames(...args: (boolean | string | number | undefined | void | null)[]) {\n  return args\n    .filter(value => {\n      if (typeof value === 'string' && value.length > 0) {\n        return true\n      }\n\n      return false\n    })\n    .join(' ')\n    .trim()\n}\n","import React from 'react'\nimport normalizeWheel from 'normalize-wheel'\nimport { Area, MediaSize, Point, Size, VideoSrc } from './types'\nimport {\n  getCropSize,\n  restrictPosition,\n  getDistanceBetweenPoints,\n  getRotationBetweenPoints,\n  computeCroppedArea,\n  getCenter,\n  getInitialCropFromCroppedAreaPixels,\n  classNames,\n} from './helpers'\nimport cssStyles from './styles.css'\n\nexport type CropperProps = {\n  image?: string\n  video?: string | VideoSrc[]\n  transform?: string\n  crop: Point\n  zoom: number\n  rotation: number\n  aspect: number\n  minZoom: number\n  maxZoom: number\n  cropShape: 'rect' | 'round'\n  cropSize?: Size\n  objectFit?: 'contain' | 'horizontal-cover' | 'vertical-cover'\n  showGrid?: boolean\n  zoomSpeed: number\n  zoomWithScroll?: boolean\n  onCropChange: (location: Point) => void\n  onZoomChange?: (zoom: number) => void\n  onRotationChange?: (rotation: number) => void\n  onCropComplete?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onCropAreaChange?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onCropSizeChange?: (cropSize: Size) => void\n  onInteractionStart?: () => void\n  onInteractionEnd?: () => void\n  onMediaLoaded?: (mediaSize: MediaSize) => void\n  style: {\n    containerStyle?: React.CSSProperties\n    mediaStyle?: React.CSSProperties\n    cropAreaStyle?: React.CSSProperties\n  }\n  classes: {\n    containerClassName?: string\n    mediaClassName?: string\n    cropAreaClassName?: string\n  }\n  restrictPosition: boolean\n  initialCroppedAreaPixels?: Area\n  mediaProps: React.ImgHTMLAttributes<HTMLElement> | React.VideoHTMLAttributes<HTMLElement>\n  disableAutomaticStylesInjection?: boolean\n}\n\ntype State = {\n  cropSize: Size | null\n  hasWheelJustStarted: boolean\n}\n\nconst MIN_ZOOM = 1\nconst MAX_ZOOM = 3\n\nclass Cropper extends React.Component<CropperProps, State> {\n  static defaultProps = {\n    zoom: 1,\n    rotation: 0,\n    aspect: 4 / 3,\n    maxZoom: MAX_ZOOM,\n    minZoom: MIN_ZOOM,\n    cropShape: 'rect',\n    objectFit: 'contain',\n    showGrid: true,\n    style: {},\n    classes: {},\n    mediaProps: {},\n    zoomSpeed: 1,\n    restrictPosition: true,\n    zoomWithScroll: true,\n  }\n\n  imageRef: HTMLImageElement | null = null\n  videoRef: HTMLVideoElement | null = null\n  containerRef: HTMLDivElement | null = null\n  styleRef: HTMLStyleElement | null = null\n  containerRect: DOMRect | null = null\n  mediaSize: MediaSize = { width: 0, height: 0, naturalWidth: 0, naturalHeight: 0 }\n  dragStartPosition: Point = { x: 0, y: 0 }\n  dragStartCrop: Point = { x: 0, y: 0 }\n  lastPinchDistance = 0\n  lastPinchRotation = 0\n  rafDragTimeout: number | null = null\n  rafPinchTimeout: number | null = null\n  wheelTimer: number | null = null\n\n  state: State = {\n    cropSize: null,\n    hasWheelJustStarted: false,\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.props.zoomWithScroll &&\n        this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n      this.containerRef.addEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.addEventListener('gesturechange', this.preventZoomSafari)\n    }\n\n    if (!this.props.disableAutomaticStylesInjection) {\n      this.styleRef = document.createElement('style')\n      this.styleRef.setAttribute('type', 'text/css')\n      this.styleRef.innerHTML = cssStyles\n      document.head.appendChild(this.styleRef)\n    }\n\n    // when rendered via SSR, the image can already be loaded and its onLoad callback will never be called\n    if (this.imageRef && this.imageRef.complete) {\n      this.onMediaLoad()\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.containerRef.removeEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.removeEventListener('gesturechange', this.preventZoomSafari)\n    }\n\n    if (this.styleRef) {\n      this.styleRef.parentNode?.removeChild(this.styleRef)\n    }\n\n    this.cleanEvents()\n    this.props.zoomWithScroll && this.clearScrollEvent()\n  }\n\n  componentDidUpdate(prevProps: CropperProps) {\n    if (prevProps.rotation !== this.props.rotation) {\n      this.computeSizes()\n      this.recomputeCropPosition()\n    } else if (prevProps.aspect !== this.props.aspect) {\n      this.computeSizes()\n    } else if (prevProps.zoom !== this.props.zoom) {\n      this.recomputeCropPosition()\n    } else if (\n      prevProps.cropSize?.height !== this.props.cropSize?.height ||\n      prevProps.cropSize?.width !== this.props.cropSize?.width\n    ) {\n      this.computeSizes()\n    } else if (\n      prevProps.crop?.x !== this.props.crop?.x ||\n      prevProps.crop?.y !== this.props.crop?.y\n    ) {\n      this.emitCropAreaChange()\n    }\n    if (prevProps.zoomWithScroll !== this.props.zoomWithScroll && this.containerRef) {\n      this.props.zoomWithScroll\n        ? this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n        : this.clearScrollEvent()\n    }\n    if (prevProps.video !== this.props.video) {\n      this.videoRef?.load()\n    }\n  }\n\n  // this is to prevent Safari on iOS >= 10 to zoom the page\n  preventZoomSafari = (e: Event) => e.preventDefault()\n\n  cleanEvents = () => {\n    document.removeEventListener('mousemove', this.onMouseMove)\n    document.removeEventListener('mouseup', this.onDragStopped)\n    document.removeEventListener('touchmove', this.onTouchMove)\n    document.removeEventListener('touchend', this.onDragStopped)\n  }\n\n  clearScrollEvent = () => {\n    if (this.containerRef) this.containerRef.removeEventListener('wheel', this.onWheel)\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n  }\n\n  onMediaLoad = () => {\n    this.computeSizes()\n    this.emitCropData()\n    this.setInitialCrop()\n\n    if (this.props.onMediaLoaded) {\n      this.props.onMediaLoaded(this.mediaSize)\n    }\n  }\n\n  setInitialCrop = () => {\n    const { initialCroppedAreaPixels, cropSize } = this.props\n\n    if (!initialCroppedAreaPixels) {\n      return\n    }\n\n    const { crop, zoom } = getInitialCropFromCroppedAreaPixels(\n      initialCroppedAreaPixels,\n      this.mediaSize,\n      cropSize\n    )\n    this.props.onCropChange(crop)\n    this.props.onZoomChange && this.props.onZoomChange(zoom)\n  }\n\n  getAspect() {\n    const { cropSize, aspect } = this.props\n    if (cropSize) {\n      return cropSize.width / cropSize.height\n    }\n    return aspect\n  }\n\n  computeSizes = () => {\n    const mediaRef = this.imageRef || this.videoRef\n    if (mediaRef && this.containerRef) {\n      this.containerRect = this.containerRef.getBoundingClientRect()\n\n      this.mediaSize = {\n        width: mediaRef.offsetWidth,\n        height: mediaRef.offsetHeight,\n        naturalWidth: this.imageRef?.naturalWidth || this.videoRef?.videoWidth || 0,\n        naturalHeight: this.imageRef?.naturalHeight || this.videoRef?.videoHeight || 0,\n      }\n      const cropSize = this.props.cropSize\n        ? this.props.cropSize\n        : getCropSize(\n            mediaRef.offsetWidth,\n            mediaRef.offsetHeight,\n            this.containerRect.width,\n            this.containerRect.height,\n            this.props.aspect,\n            this.props.rotation\n          )\n\n      if (\n        this.state.cropSize?.height !== cropSize.height ||\n        this.state.cropSize?.width !== cropSize.width\n      ) {\n        this.props.onCropSizeChange && this.props.onCropSizeChange(cropSize)\n      }\n      this.setState({ cropSize }, this.recomputeCropPosition)\n    }\n  }\n\n  static getMousePoint = (e: MouseEvent | React.MouseEvent) => ({\n    x: Number(e.clientX),\n    y: Number(e.clientY),\n  })\n\n  static getTouchPoint = (touch: Touch | React.Touch) => ({\n    x: Number(touch.clientX),\n    y: Number(touch.clientY),\n  })\n\n  onMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault()\n    document.addEventListener('mousemove', this.onMouseMove)\n    document.addEventListener('mouseup', this.onDragStopped)\n    this.onDragStart(Cropper.getMousePoint(e))\n  }\n\n  onMouseMove = (e: MouseEvent) => this.onDrag(Cropper.getMousePoint(e))\n\n  onTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    document.addEventListener('touchmove', this.onTouchMove, { passive: false }) // iOS 11 now defaults to passive: true\n    document.addEventListener('touchend', this.onDragStopped)\n    if (e.touches.length === 2) {\n      this.onPinchStart(e)\n    } else if (e.touches.length === 1) {\n      this.onDragStart(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    // Prevent whole page from scrolling on iOS.\n    e.preventDefault()\n    if (e.touches.length === 2) {\n      this.onPinchMove(e)\n    } else if (e.touches.length === 1) {\n      this.onDrag(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onDragStart = ({ x, y }: Point) => {\n    this.dragStartPosition = { x, y }\n    this.dragStartCrop = { ...this.props.crop }\n    this.props.onInteractionStart?.()\n  }\n\n  onDrag = ({ x, y }: Point) => {\n    if (this.rafDragTimeout) window.cancelAnimationFrame(this.rafDragTimeout)\n\n    this.rafDragTimeout = window.requestAnimationFrame(() => {\n      if (!this.state.cropSize) return\n      if (x === undefined || y === undefined) return\n      const offsetX = x - this.dragStartPosition.x\n      const offsetY = y - this.dragStartPosition.y\n      const requestedPosition = {\n        x: this.dragStartCrop.x + offsetX,\n        y: this.dragStartCrop.y + offsetY,\n      }\n\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            this.props.zoom,\n            this.props.rotation\n          )\n        : requestedPosition\n      this.props.onCropChange(newPosition)\n    })\n  }\n\n  onDragStopped = () => {\n    this.cleanEvents()\n    this.emitCropData()\n    this.props.onInteractionEnd?.()\n  }\n\n  onPinchStart(e: React.TouchEvent<HTMLDivElement>) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    this.lastPinchDistance = getDistanceBetweenPoints(pointA, pointB)\n    this.lastPinchRotation = getRotationBetweenPoints(pointA, pointB)\n    this.onDragStart(getCenter(pointA, pointB))\n  }\n\n  onPinchMove(e: TouchEvent) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    const center = getCenter(pointA, pointB)\n    this.onDrag(center)\n\n    if (this.rafPinchTimeout) window.cancelAnimationFrame(this.rafPinchTimeout)\n    this.rafPinchTimeout = window.requestAnimationFrame(() => {\n      const distance = getDistanceBetweenPoints(pointA, pointB)\n      const newZoom = this.props.zoom * (distance / this.lastPinchDistance)\n      this.setNewZoom(newZoom, center)\n      this.lastPinchDistance = distance\n\n      const rotation = getRotationBetweenPoints(pointA, pointB)\n      const newRotation = this.props.rotation + (rotation - this.lastPinchRotation)\n      this.props.onRotationChange && this.props.onRotationChange(newRotation)\n      this.lastPinchRotation = rotation\n    })\n  }\n\n  onWheel = (e: WheelEvent) => {\n    e.preventDefault()\n    const point = Cropper.getMousePoint(e)\n    const { pixelY } = normalizeWheel(e)\n    const newZoom = this.props.zoom - (pixelY * this.props.zoomSpeed) / 200\n    this.setNewZoom(newZoom, point)\n\n    if (!this.state.hasWheelJustStarted) {\n      this.setState({ hasWheelJustStarted: true }, () => this.props.onInteractionStart?.())\n    }\n\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n    this.wheelTimer = window.setTimeout(\n      () => this.setState({ hasWheelJustStarted: false }, () => this.props.onInteractionEnd?.()),\n      250\n    )\n  }\n\n  getPointOnContainer = ({ x, y }: Point) => {\n    if (!this.containerRect) {\n      throw new Error('The Cropper is not mounted')\n    }\n    return {\n      x: this.containerRect.width / 2 - (x - this.containerRect.left),\n      y: this.containerRect.height / 2 - (y - this.containerRect.top),\n    }\n  }\n\n  getPointOnMedia = ({ x, y }: Point) => {\n    const { crop, zoom } = this.props\n    return {\n      x: (x + crop.x) / zoom,\n      y: (y + crop.y) / zoom,\n    }\n  }\n\n  setNewZoom = (zoom: number, point: Point) => {\n    if (!this.state.cropSize || !this.props.onZoomChange) return\n\n    const zoomPoint = this.getPointOnContainer(point)\n    const zoomTarget = this.getPointOnMedia(zoomPoint)\n    const newZoom = Math.min(this.props.maxZoom, Math.max(zoom, this.props.minZoom))\n    const requestedPosition = {\n      x: zoomTarget.x * newZoom - zoomPoint.x,\n      y: zoomTarget.y * newZoom - zoomPoint.y,\n    }\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          requestedPosition,\n          this.mediaSize,\n          this.state.cropSize,\n          newZoom,\n          this.props.rotation\n        )\n      : requestedPosition\n\n    this.props.onCropChange(newPosition)\n    this.props.onZoomChange(newZoom)\n  }\n\n  getCropData = () => {\n    if (!this.state.cropSize) {\n      return null\n    }\n\n    // this is to ensure the crop is correctly restricted after a zoom back (https://github.com/ricardo-ch/react-easy-crop/issues/6)\n    const restrictedPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    return computeCroppedArea(\n      restrictedPosition,\n      this.mediaSize,\n      this.state.cropSize,\n      this.getAspect(),\n      this.props.zoom,\n      this.props.rotation,\n      this.props.restrictPosition\n    )\n  }\n\n  emitCropData = () => {\n    const cropData = this.getCropData()\n    if (!cropData) return\n\n    const { croppedAreaPercentages, croppedAreaPixels } = cropData\n    if (this.props.onCropComplete) {\n      this.props.onCropComplete(croppedAreaPercentages, croppedAreaPixels)\n    }\n\n    if (this.props.onCropAreaChange) {\n      this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels)\n    }\n  }\n\n  emitCropAreaChange = () => {\n    const cropData = this.getCropData()\n    if (!cropData) return\n\n    const { croppedAreaPercentages, croppedAreaPixels } = cropData\n    if (this.props.onCropAreaChange) {\n      this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels)\n    }\n  }\n\n  recomputeCropPosition = () => {\n    if (!this.state.cropSize) return\n\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    this.props.onCropChange(newPosition)\n    this.emitCropData()\n  }\n\n  render() {\n    const {\n      image,\n      video,\n      mediaProps,\n      transform,\n      crop: { x, y },\n      rotation,\n      zoom,\n      cropShape,\n      showGrid,\n      style: { containerStyle, cropAreaStyle, mediaStyle },\n      classes: { containerClassName, cropAreaClassName, mediaClassName },\n      objectFit,\n    } = this.props\n\n    return (\n      <div\n        onMouseDown={this.onMouseDown}\n        onTouchStart={this.onTouchStart}\n        ref={(el) => (this.containerRef = el)}\n        data-testid=\"container\"\n        style={containerStyle}\n        className={classNames('reactEasyCrop_Container', containerClassName)}\n      >\n        {image ? (\n          <img\n            alt=\"\"\n            className={classNames(\n              'reactEasyCrop_Image',\n              objectFit === 'contain' && 'reactEasyCrop_Contain',\n              objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal',\n              objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical',\n              mediaClassName\n            )}\n            {...(mediaProps as React.ImgHTMLAttributes<HTMLElement>)}\n            src={image}\n            ref={(el: HTMLImageElement) => (this.imageRef = el)}\n            style={{\n              ...mediaStyle,\n              transform:\n                transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n            }}\n            onLoad={this.onMediaLoad}\n          />\n        ) : (\n          video && (\n            <video\n              autoPlay\n              loop\n              muted={true}\n              className={classNames(\n                'reactEasyCrop_Video',\n                objectFit === 'contain' && 'reactEasyCrop_Contain',\n                objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal',\n                objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical',\n                mediaClassName\n              )}\n              {...mediaProps}\n              ref={(el: HTMLVideoElement) => (this.videoRef = el)}\n              onLoadedMetadata={this.onMediaLoad}\n              style={{\n                ...mediaStyle,\n                transform:\n                  transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n              }}\n              controls={false}\n            >\n              {(Array.isArray(video) ? video : [{ src: video }]).map((item) => (\n                <source key={item.src} {...item} />\n              ))}\n            </video>\n          )\n        )}\n        {this.state.cropSize && (\n          <div\n            style={{\n              ...cropAreaStyle,\n              width: this.state.cropSize.width,\n              height: this.state.cropSize.height,\n            }}\n            data-testid=\"cropper\"\n            className={classNames(\n              'reactEasyCrop_CropArea',\n              cropShape === 'round' && 'reactEasyCrop_CropAreaRound',\n              showGrid && 'reactEasyCrop_CropAreaGrid',\n              cropAreaClassName\n            )}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Cropper\n"]},"metadata":{},"sourceType":"module"}