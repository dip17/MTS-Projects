{"ast":null,"code":"var _jsxFileName = \"/home/mts/FX-Project/src/components/Post/Explore/Explore.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Image, Container, Media } from \"react-bootstrap\";\nimport \"./Explore.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\nimport { fetchExploreStart } from \"../../../store/actions/PostAction\";\nimport ExplorePostCard from \"./ExplorePostCard\";\nimport { translate, t } from \"react-multi-lang\";\nimport Map, { GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { apiConstants } from \"../../Constant/constants\";\nimport ExploreLoader from \"../../Loader/ExploreLoader\";\nconst Explore = props => {\n  useEffect(() => {\n    props.dispatch(fetchExploreStart());\n  }, []);\n  let autocomplete;\n  const renderAutoComplete = () => {\n    const {\n      google\n    } = props;\n    if (!google) {\n      console.log(\"asdfsadfasdfno\");\n      return;\n    }\n    autocomplete = new google.maps.places.Autocomplete(autocomplete, {\n      types: [\"geocode\"]\n    });\n    autocomplete.setFields([\"address_component\", \"geometry\", \"name\"]);\n    autocomplete.addListener(\"place_changed\", () => {\n      const place = autocomplete.getPlace();\n      console.log(\"Place\", place);\n      if (!place.geometry) return;\n      let full_address = \"\";\n      place.address_components.map(address => full_address = full_address == \"\" ? address.long_name : full_address + \",\" + address.long_name);\n      props.dispatch(fetchExploreStart({\n        latitude: place.geometry.location.lat(),\n        longitude: place.geometry.location.lng()\n      }));\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-post-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmarkes-list bookmarks-right-side resp-sapce-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pull-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"bookmarkes-list notify-title\",\n    to: `/home`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/back.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }), t(\"explore\"))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"width-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group explore-location-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"edit-address\",\n    type: \"text\",\n    placeholder: t(\"location\"),\n    onFocus: renderAutoComplete,\n    ref: ref => autocomplete = ref,\n    name: \"address\",\n    className: \"form-control edit-reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, props.explorePosts.loading ? /*#__PURE__*/React.createElement(ExploreLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }) : props.explorePosts.data.posts && props.explorePosts.data.posts.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-box explore-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, props.explorePosts.data.posts.map(post => post.postFiles.file_type == \"image\" ? /*#__PURE__*/React.createElement(ExplorePostCard, {\n    post: post,\n    key: post.post_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }) : null)) : /*#__PURE__*/React.createElement(NoDataFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })))));\n};\nconst mapStateToPros = state => ({\n  explorePosts: state.post.explorePosts\n});\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\nconst connector = connect(mapStateToPros, mapDispatchToProps)(translate(Explore));\nexport default GoogleApiWrapper({\n  apiKey: apiConstants.google_api_key\n})(connector);","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Image","Container","Media","Link","connect","NoDataFound","fetchExploreStart","ExplorePostCard","translate","t","Map","GoogleApiWrapper","Marker","apiConstants","ExploreLoader","Explore","props","dispatch","autocomplete","renderAutoComplete","google","console","log","maps","places","Autocomplete","types","setFields","addListener","place","getPlace","geometry","full_address","address_components","map","address","long_name","latitude","location","lat","longitude","lng","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","src","window","origin","md","id","type","placeholder","onFocus","ref","name","sm","explorePosts","loading","data","posts","length","post","postFiles","file_type","key","post_id","mapStateToPros","state","mapDispatchToProps","connector","apiKey","google_api_key"],"sources":["/home/mts/FX-Project/src/components/Post/Explore/Explore.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Image, Container, Media } from \"react-bootstrap\";\nimport \"./Explore.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\nimport { fetchExploreStart } from \"../../../store/actions/PostAction\";\nimport ExplorePostCard from \"./ExplorePostCard\";\nimport { translate, t } from \"react-multi-lang\";\nimport Map, { GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { apiConstants } from \"../../Constant/constants\";\nimport ExploreLoader from \"../../Loader/ExploreLoader\";\n\nconst Explore = (props) => {\n  useEffect(() => {\n    props.dispatch(fetchExploreStart());\n  }, []);\n\n  let autocomplete;\n\n  const renderAutoComplete = () => {\n    const { google } = props;\n    if (!google) {\n      console.log(\"asdfsadfasdfno\");\n      return;\n    }\n\n    autocomplete = new google.maps.places.Autocomplete(autocomplete, {\n      types: [\"geocode\"],\n    });\n\n    autocomplete.setFields([\"address_component\", \"geometry\", \"name\"]);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      const place = autocomplete.getPlace();\n      console.log(\"Place\", place);\n      if (!place.geometry) return;\n      let full_address = \"\";\n      place.address_components.map(\n        (address) =>\n          (full_address =\n            full_address == \"\"\n              ? address.long_name\n              : full_address + \",\" + address.long_name)\n      );\n\n      props.dispatch(\n        fetchExploreStart({\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng(),\n        })\n      );\n    });\n  };\n\n  return (\n    <>\n      <div className=\"live-streaming-post-sec\">\n        {/* <Container> */}\n        <Row className=\"no-gutters\">\n          <div className=\"profile-post-area\">\n            <div className=\"bookmarkes-list bookmarks-right-side resp-sapce-center\">\n              <div className=\"pull-left\">\n                <Link className=\"bookmarkes-list notify-title\" to={`/home`}>\n                  <Image\n                    src={\n                      window.location.origin + \"/assets/images/icons/back.svg\"\n                    }\n                    className=\"svg-clone\"\n                  />\n                  {t(\"explore\")}\n                </Link>\n              </div>\n            </div>\n          </div>\n          <Row className=\"width-full\">\n            <Col md={9}></Col>\n            <Col md={3}>\n              <div className=\"form-group explore-location-dropdown\">\n                <input\n                  id=\"edit-address\"\n                  type=\"text\"\n                  placeholder={t(\"location\")}\n                  onFocus={renderAutoComplete}\n                  ref={(ref) => (autocomplete = ref)}\n                  name=\"address\"\n                  className=\"form-control edit-reset\"\n                ></input>\n              </div>\n            </Col>\n          </Row>\n          <Col sm=\"12\" md=\"12\">\n            {props.explorePosts.loading ? (\n              <ExploreLoader />\n            ) : props.explorePosts.data.posts &&\n              props.explorePosts.data.posts.length > 0 ? (\n              <div className=\"live-streaming-post-box explore-box\">\n                {props.explorePosts.data.posts.map((post) =>\n                  post.postFiles.file_type == \"image\" ? (\n                    <ExplorePostCard post={post} key={post.post_id} />\n                  ) : null\n                )}\n              </div>\n            ) : (\n              <NoDataFound></NoDataFound>\n            )}\n          </Col>\n        </Row>\n        {/* </Container> */}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  explorePosts: state.post.explorePosts,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nconst connector = connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(Explore));\n\nexport default GoogleApiWrapper({\n  apiKey: apiConstants.google_api_key,\n})(connector);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}