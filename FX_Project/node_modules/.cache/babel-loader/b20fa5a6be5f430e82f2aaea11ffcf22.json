{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport { ERROR_LOGOUT_CHECK } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nconst erroCode = [1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007];\nfunction* logoutStatusCheck() {\n  try {\n    const inputData = yield select(state => state.errorDetails.error);\n    console.log(\"Error Check statrted\", inputData);\n    if (erroCode.indexOf(inputData.error_code) !== -1) {\n      console.log(\"Error Check true\");\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"userLoginStatus\");\n      localStorage.removeItem(\"user_picture\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"socket\");\n      localStorage.removeItem(\"user_cover\");\n      localStorage.removeItem(\"name\");\n      localStorage.removeItem(\"user_unique_id\");\n      localStorage.removeItem(\"is_document_verified\");\n      localStorage.removeItem(\"is_verified_badge\");\n      localStorage.removeItem(\"is_two_step_auth_enabled\");\n      localStorage.removeItem(\"is_content_creator\");\n      localStorage.removeItem(\"default_payment_method\");\n      localStorage.removeItem(\"emailId\");\n      localStorage.removeItem(\"total_followers\");\n      localStorage.removeItem(\"total_followings\");\n      localStorage.removeItem(\"is_subscription_enabled\");\n      const notificationMessage = getErrorNotificationMessage('Invalid Token. Login to Continue!');\n      yield put(createNotification(notificationMessage));\n      setTimeout(() => {\n        window.location.assign(\"/\");\n      }, 300);\n    } else {\n      console.log(\"Error Check false\");\n      //   const notificationMessage = getErrorNotificationMessage(\n      //     response.data.error\n      //   );\n      //   yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    console.log(\"Error Check false\", error);\n    // const notificationMessage = getErrorNotificationMessage(error.message);\n    // yield put(createNotification(notificationMessage));\n  }\n}\nexport default function* pageSaga() {\n  yield all([yield takeLatest(ERROR_LOGOUT_CHECK, logoutStatusCheck)]);\n}","map":{"version":3,"names":["call","select","put","takeLatest","all","ERROR_LOGOUT_CHECK","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","erroCode","logoutStatusCheck","inputData","state","errorDetails","error","console","log","indexOf","error_code","localStorage","removeItem","notificationMessage","setTimeout","window","location","assign","pageSaga"],"sources":["/home/mts/Vishal/src/store/sagas/ErrorSaga.jsx"],"sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport { ERROR_LOGOUT_CHECK } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\n\nconst erroCode = [1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007];\n\nfunction* logoutStatusCheck() {\n  try {\n    const inputData = yield select((state) => state.errorDetails.error);\n    console.log(\"Error Check statrted\", inputData);\n    if (erroCode.indexOf(inputData.error_code) !== -1) {\n      console.log(\"Error Check true\");\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"userLoginStatus\");\n      localStorage.removeItem(\"user_picture\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"socket\");\n      localStorage.removeItem(\"user_cover\");\n      localStorage.removeItem(\"name\");\n      localStorage.removeItem(\"user_unique_id\");\n      localStorage.removeItem(\"is_document_verified\");\n      localStorage.removeItem(\"is_verified_badge\");\n      localStorage.removeItem(\"is_two_step_auth_enabled\");\n      localStorage.removeItem(\"is_content_creator\");\n      localStorage.removeItem(\"default_payment_method\");\n      localStorage.removeItem(\"emailId\");\n      localStorage.removeItem(\"total_followers\");\n      localStorage.removeItem(\"total_followings\");\n      localStorage.removeItem(\"is_subscription_enabled\");\n      const notificationMessage = getErrorNotificationMessage('Invalid Token. Login to Continue!');\n      yield put(createNotification(notificationMessage));\n      setTimeout(() => {\n        window.location.assign(\"/\");\n      }, 300);\n    } else {\n      console.log(\"Error Check false\");\n      //   const notificationMessage = getErrorNotificationMessage(\n      //     response.data.error\n      //   );\n      //   yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    console.log(\"Error Check false\", error);\n    // const notificationMessage = getErrorNotificationMessage(error.message);\n    // yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(ERROR_LOGOUT_CHECK, logoutStatusCheck)]);\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,UAAU,EAAEC,GAAG,QAAQ,oBAAoB;AACvE,SAASC,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,kBAAkB,QAAQ,oBAAoB;AACvD,SACEC,6BAA6B,EAC7BC,2BAA2B,QACtB,6CAA6C;AAEpD,MAAMC,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAEjE,UAAUC,iBAAiBA,CAAA,EAAG;EAC5B,IAAI;IACF,MAAMC,SAAS,GAAG,MAAMV,MAAM,CAAEW,KAAK,IAAKA,KAAK,CAACC,YAAY,CAACC,KAAK,CAAC;IACnEC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEL,SAAS,CAAC;IAC9C,IAAIF,QAAQ,CAACQ,OAAO,CAACN,SAAS,CAACO,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;MACjDH,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BG,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;MACtCD,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;MACjCD,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC;MAC1CD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC;MACvCD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;MACnCD,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;MACjCD,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC;MACrCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;MAC/BD,YAAY,CAACC,UAAU,CAAC,gBAAgB,CAAC;MACzCD,YAAY,CAACC,UAAU,CAAC,sBAAsB,CAAC;MAC/CD,YAAY,CAACC,UAAU,CAAC,mBAAmB,CAAC;MAC5CD,YAAY,CAACC,UAAU,CAAC,0BAA0B,CAAC;MACnDD,YAAY,CAACC,UAAU,CAAC,oBAAoB,CAAC;MAC7CD,YAAY,CAACC,UAAU,CAAC,wBAAwB,CAAC;MACjDD,YAAY,CAACC,UAAU,CAAC,SAAS,CAAC;MAClCD,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC;MAC1CD,YAAY,CAACC,UAAU,CAAC,kBAAkB,CAAC;MAC3CD,YAAY,CAACC,UAAU,CAAC,yBAAyB,CAAC;MAClD,MAAMC,mBAAmB,GAAGb,2BAA2B,CAAC,mCAAmC,CAAC;MAC5F,MAAMN,GAAG,CAACI,kBAAkB,CAACe,mBAAmB,CAAC,CAAC;MAClDC,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,GAAG,CAAC;MAC7B,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACLV,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC;MACA;MACA;MACA;IACF;EACF,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;IACvC;IACA;EACF;AACF;AAEA,eAAe,UAAUY,QAAQA,CAAA,EAAG;EAClC,MAAMtB,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACE,kBAAkB,EAAEK,iBAAiB,CAAC,CAAC,CAAC;AACtE"},"metadata":{},"sourceType":"module"}