{"ast":null,"code":"var _jsxFileName = \"/home/mts/FX-Project/src/components/Model/PaymentModal/StripePaymentSec.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { PaymentElement, LinkAuthenticationElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { addMoneyViaCardStart } from '../../../store/actions/WalletAction';\nimport { translate, t } from 'react-multi-lang';\nconst StripePaymentSec = props => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  // const [email, setEmail] = useState('');\n  const [skipRender, setSkipRender] = useState(true);\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n    const clientSecret = props.clientSecret;\n    if (!clientSecret) {\n      return;\n    }\n    stripe.retrievePaymentIntent(clientSecret).then(({\n      paymentIntent\n    }) => {\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          setMessage(t(\"payment_succeeded\"));\n          break;\n        case \"processing\":\n          setMessage(t(\"payment_processing\"));\n          break;\n        case \"requires_payment_method\":\n          setMessage(t(\"payment_failed\"));\n          break;\n        default:\n          setMessage(\"\");\n          break;\n      }\n    });\n  }, [stripe]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error,\n      ...response\n    } = await stripe.confirmPayment({\n      elements,\n      redirect: 'if_required',\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        // return_url: \"http://localhost:3000\",\n      }\n    });\n    if (!error) {\n      props.dispatch(addMoneyViaCardStart({\n        amount: response.paymentIntent.amount,\n        payment_id: response.paymentIntent.id\n      }));\n    }\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error) if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setSkipRender(false);\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-5 back\",\n    onClick: () => props.back(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-left mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), \" Back\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinkAuthenticationElement, {\n    id: \"link-authentication-element\"\n    // onChange={(e) => setEmail(e.target.value)}\n    ,\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PaymentElement, {\n    id: \"payment-element\",\n    options: paymentElementOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-card-btn mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: isLoading || !stripe || !elements || props.addAmount.buttonDisable,\n    id: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, isLoading || props.addAmount.buttonDisable ? \"Processing\" : \"Pay now\"))), message && !skipRender ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"payment-message\",\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 35\n    }\n  }, message) : null));\n};\nconst mapStateToPros = state => ({\n  addAmount: state.wallet.addMoneyInput\n});\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(StripePaymentSec));","map":{"version":3,"names":["React","useState","useEffect","PaymentElement","LinkAuthenticationElement","useStripe","useElements","Button","connect","addMoneyViaCardStart","translate","t","StripePaymentSec","props","stripe","elements","skipRender","setSkipRender","message","setMessage","isLoading","setIsLoading","clientSecret","retrievePaymentIntent","then","paymentIntent","status","handleSubmit","e","preventDefault","error","response","confirmPayment","redirect","confirmParams","dispatch","amount","payment_id","id","type","paymentElementOptions","layout","createElement","Fragment","className","onClick","back","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","options","disabled","addAmount","buttonDisable","mapStateToPros","state","wallet","addMoneyInput","mapDispatchToProps"],"sources":["/home/mts/FX-Project/src/components/Model/PaymentModal/StripePaymentSec.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  PaymentElement,\n  LinkAuthenticationElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { addMoneyViaCardStart } from '../../../store/actions/WalletAction';\nimport { translate, t } from 'react-multi-lang';\n\nconst StripePaymentSec = (props) => {\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  // const [email, setEmail] = useState('');\n  const [skipRender, setSkipRender] = useState(true);\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n\n    const clientSecret = props.clientSecret;\n\n    if (!clientSecret) {\n      return;\n    }\n\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          setMessage(t(\"payment_succeeded\"));\n          break;\n        case \"processing\":\n          setMessage(t(\"payment_processing\"));\n          break;\n        case \"requires_payment_method\":\n          setMessage(t(\"payment_failed\"));\n          break;\n        default:\n          setMessage(\"\");\n          break;\n      }\n    });\n  }, [stripe]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setIsLoading(true);\n\n    const { error, ...response } = await stripe.confirmPayment({\n      elements,\n      redirect: 'if_required',\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        // return_url: \"http://localhost:3000\",\n      },\n    });\n    if (!error) {\n      props.dispatch(addMoneyViaCardStart({\n        amount: response.paymentIntent.amount,\n        payment_id: response.paymentIntent.id,\n      }));\n    }\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error)\n      if (error.type === \"card_error\" || error.type === \"validation_error\") {\n        setMessage(error.message);\n      } else {\n        setMessage(\"An unexpected error occurred.\");\n      }\n    setSkipRender(false);\n    setIsLoading(false);\n  };\n\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  }\n\n\n  return (\n    <>\n      <div className=\"mb-5 back\" onClick={() => props.back()}>\n        <i className=\"fas fa-arrow-left mr-2\"></i> Back\n      </div>\n      <form id=\"payment-form\" onSubmit={handleSubmit}>\n        <LinkAuthenticationElement\n          id=\"link-authentication-element\"\n          // onChange={(e) => setEmail(e.target.value)}\n          className=\"mb-2\"\n        />\n        <PaymentElement id=\"payment-element\" options={paymentElementOptions} />\n        <div className=\"add-card-btn mt-5\">\n          <Button\n            disabled={isLoading || !stripe || !elements || props.addAmount.buttonDisable}\n            id=\"submit\"\n            type=\"submit\"\n          >\n            <span id=\"button-text\">\n              {isLoading || props.addAmount.buttonDisable ? \"Processing\" : \"Pay now\"}\n            </span>\n          </Button>\n        </div>\n        {/* Show any error or success messages */}\n        {message && !skipRender ? <div id=\"payment-message\" className=\"text-danger\">{message}</div> : null}\n      </form>\n    </>\n  );\n\n}\n\n\nconst mapStateToPros = (state) => ({\n  addAmount: state.wallet.addMoneyInput,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(StripePaymentSec));"],"mappings":"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"},"metadata":{},"sourceType":"module"}