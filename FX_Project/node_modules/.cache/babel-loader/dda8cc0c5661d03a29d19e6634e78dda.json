{"ast":null,"code":"var _jsxFileName = \"/home/mts/Vishal/src/components/Model/PaymentModal/TipModalSec.jsx\";\nimport React, { useState } from \"react\";\nimport { InputGroup, FormControl, Image, Modal, Media, Row, Col, Form, Button } from \"react-bootstrap\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport configuration from \"react-global-configuration\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { translate, t } from \"react-multi-lang\";\nconst TipModalSec = props => {\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\")\n  };\n  const radios = [{\n    name: \"10 Tokens\",\n    value: \"10\"\n  }, {\n    name: \"20 Tokens\",\n    value: \"20\"\n  }, {\n    name: \"50 Tokens\",\n    value: \"50\"\n  }, {\n    name: \"100 Tokens\",\n    value: \"100\"\n  }];\n  const handleTipChange = value => {\n    if (!isNaN(value)) {\n      props.setTipAmount(value >= 0 ? value : 0);\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallet-modal-details mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"payment-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, t(\"send_tips\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, t(\"sentip_paytment_note\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    min: \"0\",\n    value: props.tipAmount,\n    onChange: e => handleTipChange(e.target.value),\n    step: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tips-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, radios.map((radio, idx) => /*#__PURE__*/React.createElement(ToggleButton, {\n    key: idx,\n    id: `radio-${idx}`,\n    type: \"radio\",\n    variant: \"btn-tips\",\n    name: \"radio\",\n    value: radio.value,\n    checked: Number(props.tipAmount) === Number(radio.value),\n    onChange: e => props.setTipAmount(Number(radio.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, radio.name)))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    value: props.message,\n    onChange: e => props.setMessage(e.target.value),\n    placeholder: t(\"send_creator_note\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallet-account-balance mt-5 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, t(\"total_tokens\", {\n    token: props.tipAmount ? props.tipAmount : 0\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-card-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, props.paymentType === \"PAYPAL\" ? /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: props.amount,\n    onError: props.paypalOnError,\n    onSuccess: props.paypalOnSuccess,\n    onCancel: props.paypalOnCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: props.tipAmount > 0 ? false : true || props.buttonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, props.loadingButtonContent ? props.loadingButtonContent : t(\"send_tip\"))))));\n};\nexport default translate(TipModalSec);","map":{"version":3,"names":["React","useState","InputGroup","FormControl","Image","Modal","Media","Row","Col","Form","Button","ButtonGroup","ToggleButton","configuration","PaypalExpressBtn","translate","t","TipModalSec","props","env","get","currency","client","sandbox","production","radios","name","value","handleTipChange","isNaN","setTipAmount","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","Group","Control","type","min","tipAmount","onChange","e","target","step","map","radio","idx","key","id","variant","checked","Number","as","message","setMessage","placeholder","token","paymentType","total","amount","onError","paypalOnError","onSuccess","paypalOnSuccess","onCancel","paypalOnCancel","disabled","buttonDisable","loadingButtonContent"],"sources":["/home/mts/Vishal/src/components/Model/PaymentModal/TipModalSec.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  InputGroup,\n  FormControl,\n  Image,\n  Modal,\n  Media,\n  Row,\n  Col,\n  Form,\n  Button,\n} from \"react-bootstrap\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport configuration from \"react-global-configuration\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst TipModalSec = (props) => {\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  const radios = [\n    { name: \"10 Tokens\", value: \"10\" },\n    { name: \"20 Tokens\", value: \"20\" },\n    { name: \"50 Tokens\", value: \"50\" },\n    { name: \"100 Tokens\", value: \"100\" },\n  ];\n\n  const handleTipChange = (value) => {\n    if (!isNaN(value)) {\n      props.setTipAmount(value >= 0 ? value : 0);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"wallet-modal-details mt-5\">\n        <h4 className=\"payment-modal-title\">{t(\"send_tips\")}</h4>\n        <p>\n          {t(\"sentip_paytment_note\")}\n        </p>\n        <Form onSubmit={props.handleSubmit}>\n          <Form.Group className=\"mb-3\">\n            <Form.Control\n              type=\"number\"\n              min=\"0\"\n              value={props.tipAmount}\n              onChange={(e) => handleTipChange(e.target.value)}\n              step=\"1\"\n            />\n          </Form.Group>\n          <div className=\"tips-list\">\n            <ButtonGroup>\n              {radios.map((radio, idx) => (\n                <ToggleButton\n                  key={idx}\n                  id={`radio-${idx}`}\n                  type=\"radio\"\n                  variant=\"btn-tips\"\n                  name=\"radio\"\n                  value={radio.value}\n                  checked={Number(props.tipAmount) === Number(radio.value)}\n                  onChange={(e) => props.setTipAmount(Number(radio.value))}\n                >\n                  {radio.name}\n                </ToggleButton>\n              ))}\n            </ButtonGroup>\n          </div>\n          <Form.Group className=\"mb-3\">\n            <Form.Control\n              as=\"textarea\"\n              value={props.message}\n              onChange={(e) => props.setMessage(e.target.value)}\n              placeholder={t(\"send_creator_note\")}\n            />\n          </Form.Group>\n          <div className=\"wallet-account-balance mt-5 mb-5\">\n            {t(\"total_tokens\",{token: props.tipAmount ? props.tipAmount : 0})}\n          </div>\n          <div className=\"add-card-btn\">\n            {props.paymentType === \"PAYPAL\" ? (\n              <PaypalExpressBtn\n                env={env}\n                client={client}\n                currency={currency}\n                total={props.amount}\n                onError={props.paypalOnError}\n                onSuccess={props.paypalOnSuccess}\n                onCancel={props.paypalOnCancel}\n              />\n            ) : (\n              <Button\n                type=\"submit\"\n                disabled={props.tipAmount > 0 ? false : true || props.buttonDisable}\n              >\n                {props.loadingButtonContent\n                  ? props.loadingButtonContent\n                  : t(\"send_tip\")}\n              </Button>\n            )}\n          </div>\n        </Form>\n      </div>\n\n    </>\n  );\n};\n\nexport default (translate(TipModalSec));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}