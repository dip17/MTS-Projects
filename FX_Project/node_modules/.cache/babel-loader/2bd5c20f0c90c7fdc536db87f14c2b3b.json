{"ast":null,"code":"var _jsxFileName = \"/home/mts/Vishal/src/components/Model/PaymentModal/WalletAmountSec.jsx\";\nimport React, { useState } from 'react';\nimport { InputGroup, FormControl, Image, Modal, Media, Row, Col, Form, Button } from \"react-bootstrap\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport configuration from \"react-global-configuration\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { translate, t } from 'react-multi-lang';\nconst WalletAmountSec = props => {\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\")\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallet-modal-details mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"payment-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, t(\"add_wallet_token\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, t(\"looking_beatiful_para\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: props.amount,\n    min: \"50\",\n    onChange: e => props.setAmount(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallet-account-balance mt-5 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, t(\"amount\"), \" (\", configuration.get(\"configData.token_amount\"), \" * \", props.amount, \") = \", configuration.get(\"configData.currency\"), configuration.get(\"configData.token_amount\") * props.amount), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-card-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, props.paymentType === \"PAYPAL\" ? /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: props.amount,\n    onError: props.paypalOnError,\n    onSuccess: props.paypalOnSuccess,\n    onCancel: props.paypalOnCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: props.amount && props.amount > 0 ? false : true || props.buttonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, props.loadingButtonContent ? props.loadingButtonContent : t(\"add\"))))));\n};\nexport default translate(WalletAmountSec);","map":{"version":3,"names":["React","useState","InputGroup","FormControl","Image","Modal","Media","Row","Col","Form","Button","ButtonGroup","ToggleButton","configuration","PaypalExpressBtn","translate","t","WalletAmountSec","props","env","get","currency","client","sandbox","production","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","Group","Control","type","value","amount","min","onChange","e","setAmount","target","paymentType","total","onError","paypalOnError","onSuccess","paypalOnSuccess","onCancel","paypalOnCancel","disabled","buttonDisable","loadingButtonContent"],"sources":["/home/mts/Vishal/src/components/Model/PaymentModal/WalletAmountSec.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  InputGroup,\n  FormControl,\n  Image,\n  Modal,\n  Media,\n  Row,\n  Col,\n  Form,\n  Button,\n} from \"react-bootstrap\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport configuration from \"react-global-configuration\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { translate, t } from 'react-multi-lang';\n\nconst WalletAmountSec = (props) => {\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  return (\n    <>\n      <div className=\"wallet-modal-details mt-5\">\n        <h4 className=\"payment-modal-title\">{t(\"add_wallet_token\")}</h4>\n        <p>{t(\"looking_beatiful_para\")}</p>\n        <Form onSubmit={props.handleSubmit}>\n          <Form.Group className=\"mb-3\">\n            <Form.Control type=\"text\"\n              value={props.amount}\n              min=\"50\"\n              onChange={e => props.setAmount(e.target.value)}\n            />\n          </Form.Group>\n          <div className=\"wallet-account-balance mt-5 mb-5\">\n            {t(\"amount\")} ({configuration.get(\"configData.token_amount\")} * {props.amount}) = {configuration.get(\"configData.currency\")}{configuration.get(\"configData.token_amount\") * props.amount}\n          </div>\n          <div className=\"add-card-btn\">\n            {props.paymentType === \"PAYPAL\" ?\n              <PaypalExpressBtn\n                env={env}\n                client={client}\n                currency={currency}\n                total={props.amount}\n                onError={props.paypalOnError}\n                onSuccess={props.paypalOnSuccess}\n                onCancel={props.paypalOnCancel}\n              />\n              : <Button type=\"submit\"\n                disabled={props.amount && props.amount > 0 ? false : true || props.buttonDisable}\n              >{\n                  props.loadingButtonContent ?\n                    props.loadingButtonContent\n                    : t(\"add\")\n                }</Button>\n            }\n          </div>\n        </Form>\n      </div>\n    </>\n  )\n\n}\n\nexport default translate(WalletAmountSec);"],"mappings":"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"},"metadata":{},"sourceType":"module"}