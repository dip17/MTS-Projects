{"ast":null,"code":"var _jsxFileName = \"/home/mts/Vishal/src/components/Chat/NewChatRoom.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Modal, Container, Row, Col, Button, Form, Image, Media, Dropdown, InputGroup } from \"react-bootstrap\";\nimport \"./NewChat.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport NewChatUploadModal from \"./NewChatUploadModal\";\nimport AltraChatAudioPlayer from \"../CustomComponents/AudioPlayer/AltraChatAudioPlayer\";\nimport SendChat from \"./SendChat\";\nimport ReceivedChat from \"./ReceivedChat\";\nimport { translate, t } from \"react-multi-lang\";\nimport { connect } from \"react-redux\";\nimport FancyBox from \"../NewHome/NewSingleView/FancyBox\";\nimport { changeChatAudio, fetchChatMessagesStart, fetchMoreChatMessagesStart, updateChatMessagesSuccess } from \"../../store/actions/ChatAction\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport configuration from \"react-global-configuration\";\nimport io from \"socket.io-client\";\nimport dayjs from \"dayjs\";\nimport PrivateAudioCallModal from \"../helper/PrivateAudioCallModal\";\nimport PrivateCallModal from \"../helper/PrivateCallModal\";\nimport { saveBlockUserStart } from \"../../store/actions/UserAction\";\nimport NewChatUserInfo from \"./NewChatUserInfo\";\nimport useWindowDimensions from \"../helper/WindowHelper\";\nimport CustomLazyLoad from \"../helper/CustomLazyLoad\";\nimport { getSuccessNotificationMessage } from \"../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\nlet chatSocket;\nconst NewChatRoom = props => {\n  const history = useHistory();\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const userId = localStorage.getItem(\"userId\");\n  const chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n  const [skipRender, setSkipRender] = useState(true);\n  const [requestVideoCall, setRequestVideoCall] = useState(false);\n  const [requestAudioCall, setRequestAudioCall] = useState(false);\n  const [newChatUpload, setNewChatUpload] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [showEmojis, setShowEmojis] = useState(false);\n  const [cursorPointer, setCursorPointer] = useState(0);\n  const [isChat, setIsChat] = useState(true);\n  const [newMsg, setNewMsg] = useState(false);\n  const messageField = useRef();\n  const latest = useRef();\n  let chatDate = \"\";\n  let index = 0;\n  useEffect(() => {\n    if (width >= 992) {\n      setIsChat(true);\n    }\n  }, [width]);\n  useEffect(() => {\n    if (newMsg) {\n      const rect = latest.current.getBoundingClientRect();\n      const container = document.getElementById(\"scrollableDiv\").getBoundingClientRect();\n      if (rect.bottom > container.bottom + 10) {\n        // showNewMsg(true);\n        // const notificationMessage = getSuccessNotificationMessage(\"New Message Received\");\n        // props.dispatch(createNotification(notificationMessage));\n      }\n    }\n    setNewMsg(false);\n  }, [newMsg]);\n  useEffect(() => {\n    props.dispatch(fetchChatMessagesStart({\n      from_user_id: userId,\n      to_user_id: props.selectedUser.user_id\n    }));\n    chatSocketConnect(props.selectedUser.user_id);\n    if (chatSocket) {\n      chatSocket.disconnect();\n    }\n    setIsChat(true);\n    return () => {\n      chatSocket.disconnect();\n    };\n  }, [props.selectedUser.user_id]);\n  useEffect(() => {\n    if (!skipRender) {\n      messageField.current.selectionEnd = cursorPointer;\n    }\n  }, [cursorPointer]);\n  const fetchMoreMessages = () => {\n    props.dispatch(fetchMoreChatMessagesStart({\n      skip: props.chatMessages.data.messages.length,\n      take: 12,\n      from_user_id: userId,\n      to_user_id: props.selectedUser.user_id\n    }));\n  };\n  useEffect(() => {\n    if (!skipRender && !props.chatMessages.loading) {\n      if (!Object.keys(props.chatMessages.data).length > 0) {\n        props.setShowContent(false);\n      }\n    }\n    setSkipRender(false);\n  }, [props.chatMessages]);\n  const closeNewChatUploadModal = () => {\n    setNewChatUpload(false);\n  };\n  const closePrivateCallModal = () => {\n    setRequestVideoCall(false);\n    setRequestAudioCall(false);\n  };\n  const handleBlockUser = () => {\n    props.dispatch(saveBlockUserStart({\n      user_id: props.selectedUser.user_id\n    }));\n  };\n  const chatSocketConnect = to_user_id => {\n    // check the socket url is configured\n    console.log(\"chatSocket\", chatSocketUrl);\n    console.log(\"Input ID\", to_user_id);\n    if (chatSocketUrl) {\n      chatSocket = io(chatSocketUrl, {\n        query: `commonid:'user_id_${userId}_to_user_id_${props.selectedUser.user_id}',myid:${userId}`\n      });\n      console.log(\"chatSocket\", chatSocket);\n      chatSocket.emit(\"update sender\", {\n        commonid: `user_id_${userId}_to_user_id_${props.selectedUser.user_id}`,\n        myid: userId\n      });\n      chatSocket.on(\"message\", newData => {\n        console.log(newData);\n        setNewMsg(true);\n        props.dispatch(updateChatMessagesSuccess(newData));\n      });\n    }\n  };\n\n  // Message Send\n  const handleMessageSubmit = ({\n    msgAmount = 0,\n    fileType = \"text\",\n    chatAssets = []\n  }) => {\n    if (chatSocket && message && message.trim() || chatAssets.length > 0) {\n      const now = new Date();\n      const date = `${(\"0\" + now.getDate()).slice(-2)} ${now.toLocaleString(\"default\", {\n        month: \"short\"\n      })} ${now.getFullYear()}`;\n      const time = dayjs(now).format(\"hh:mm a\");\n      const chatData = {\n        from_user_id: userId,\n        to_user_id: props.selectedUser.user_id,\n        message: message,\n        amount: msgAmount,\n        is_user_needs_pay: msgAmount > 0 ? 1 : 0,\n        file_type: fileType,\n        loggedin_user_id: userId,\n        chat_asset_id: chatAssets.map(asset => asset.chat_asset_id).toString(),\n        date_formatted: date,\n        time_formatted: time,\n        amount_formatted: msgAmount + \" \" + configuration.get(\"configData.token_symbol\")\n      };\n      chatSocket.emit(\"message\", chatData);\n      setMessage(\"\");\n      props.dispatch(updateChatMessagesSuccess({\n        ...chatData,\n        chat_assets: chatAssets\n      }));\n      setNewChatUpload(false);\n      setShowEmojis(false);\n      messageField.current.focus();\n      latest.current.scrollIntoView();\n    }\n  };\n  const handleToggleEmojis = () => {\n    messageField.current.focus();\n    setShowEmojis(!showEmojis);\n  };\n  const onEmojiPick = data => {\n    const ref = messageField.current;\n    ref.focus();\n    const start = message.substring(0, ref.selectionStart);\n    const end = message.substring(ref.selectionStart);\n    const text = start + data.native + end;\n    setMessage(text);\n    setCursorPointer(start.length + data.native.length);\n  };\n  if (props.chatMessages.data.messages && props.chatMessages.data.messages.length > 0) {\n    chatDate = props.chatMessages.data.messages[0].date_formatted;\n    index = props.chatMessages.data.messages.length;\n  }\n  const updateChatDate = newDate => {\n    chatDate = newDate;\n    index--;\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-chat-room-header-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-chat-room-user-details\",\n    onClick: e => width < 992 ? setIsChat(!isChat) : e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back-btn-mobile-show\",\n    onClick: () => history.push(\"/inbox\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"back-btn-mobile\",\n    src: window.location.origin + \"/assets/images/new-chat/back-icon.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-chat-room-user-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomLazyLoad, {\n    src: props.selectedUser.picture,\n    className: \"new-chat-room-user-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-chat-room-user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, props.selectedUser.name), /*#__PURE__*/React.createElement(React.Fragment, null, props.chatMessages.data.user && props.chatMessages.data.user.is_online_status == 1 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, props.chatMessages.data.user.is_user_online == 1 ? \"Online\" : \"Offline\") : \"\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-chat-room-user-action-btn-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"new-chat-room-user-action-btn-list list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => setRequestAudioCall(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"new-chat-room-user-action-icon\",\n    src: window.location.origin + \"/assets/images/new-chat/audio-call.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => setRequestVideoCall(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"new-chat-room-user-action-icon\",\n    src: window.location.origin + \"/assets/images/new-chat/video-call.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"new-chat-room-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    className: \"new-chat-room-dropdown-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"three-dots-icon\",\n    src: window.location.origin + \"/assets/images/new-chat/three-dots.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"dropdown-item\",\n    to: `/${props.selectedUser.user_unique_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, t(\"view_profile\")), /*#__PURE__*/React.createElement(Link, {\n    className: \"dropdown-item\",\n    to: \"#\",\n    onClick: () => handleBlockUser(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, t(\"block_user\"))))))))), isChat ? /*#__PURE__*/React.createElement(React.Fragment, null, props.chatMessages.data.messages ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-chat-room-message-sec\",\n    id: \"scrollableDiv\",\n    style: {\n      minHeight: \"calc(100vh - 220px)\",\n      maxHeight: \"calc(100vh - 215px)\",\n      overflow: \"auto\",\n      display: \"flex\",\n      flexDirection: \"column-reverse\",\n      marginTop: \"0em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: props.chatMessages.data.messages.length,\n    next: fetchMoreMessages,\n    hasMore: props.chatMessages.data.messages.length < props.chatMessages.data.total,\n    loader: /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 27\n      }\n    }, \"Loading...\"),\n    inverse: true,\n    style: {\n      padding: \"2em\",\n      display: \"flex\",\n      flexDirection: \"column-reverse\",\n      overflow: \"inherit\"\n    },\n    scrollableTarget: \"scrollableDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: latest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FancyBox, {\n    delegate: \"[data-fancybox-chat]\",\n    options: {\n      groupAll: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 19\n    }\n  }, props.chatMessages.data.messages.map((message, i) => /*#__PURE__*/React.createElement(React.Fragment, null, chatDate != message.date_formatted ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-day-container\",\n    style: {\n      zIndex: index\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 29\n    }\n  }, chatDate, updateChatDate(message.date_formatted))) : null, message.from_user_id == userId ? /*#__PURE__*/React.createElement(SendChat, {\n    message: message,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(ReceivedChat, {\n    message: message,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 27\n    }\n  }))), chatDate ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-day-container\",\n    style: {\n      zIndex: index\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }, chatDate)) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-chat-room-input-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"new-chat-room-form\",\n    onSubmit: e => {\n      e.preventDefault();\n      handleMessageSubmit({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `emoji-container ${showEmojis ? \"show\" : \"hide\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    data: data,\n    onEmojiSelect: onEmojiPick,\n    onClickOutside: () => {\n      console.log(\"Outside triggered\");\n      if (showEmojis) setShowEmojis(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    onClick: () => handleToggleEmojis(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"new-chat-emoji-icon\",\n    src: window.location.origin + \"/assets/images/feed-story/comments-emoji.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    ref: messageField,\n    placeholder: t(\"type_something\"),\n    value: !newChatUpload ? message : \"\",\n    onChange: e => setMessage(e.target.value)\n    // onKeyPress={e => {\n    //   if (e.key === \"Enter\")\n    //     handleMessageSubmit({})\n    // }}\n    ,\n    autoFocus: true,\n    on: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Text, {\n    onClick: () => setNewChatUpload(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"new-chat-file-icon\",\n    src: window.location.origin + \"/assets/images/new-chat/attach-file.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(InputGroup.Text, {\n    onClick: () => handleMessageSubmit({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"new-chat-send-icon\",\n    src: window.location.origin + \"/assets/images/feed-story/comments-send.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 23\n    }\n  })))))) : null) : /*#__PURE__*/React.createElement(NewChatUserInfo, {\n    selectedUser: props.selectedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }\n  }), newChatUpload ? /*#__PURE__*/React.createElement(NewChatUploadModal, {\n    newChatUpload: newChatUpload,\n    selectedUser: props.selectedUser,\n    message: message,\n    setMessage: setMessage,\n    handleMessageSubmit: handleMessageSubmit,\n    closeNewChatUploadModal: closeNewChatUploadModal,\n    setNewChatUpload: setNewChatUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }) : null, requestVideoCall ? /*#__PURE__*/React.createElement(PrivateCallModal, {\n    requestVideoCall: requestVideoCall,\n    closePrivateCallModal: closePrivateCallModal,\n    username: props.selectedUser.username,\n    userPicture: props.selectedUser.picture,\n    videoAmount: props.selectedUser.video_call_amount_formatted,\n    name: props.selectedUser.name,\n    post_id: null,\n    user_id: props.selectedUser.user_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }\n  }) : null, requestAudioCall ? /*#__PURE__*/React.createElement(PrivateAudioCallModal, {\n    requestAudioCall: requestAudioCall,\n    closePrivateCallModal: closePrivateCallModal,\n    username: props.selectedUser.username,\n    userPicture: props.selectedUser.picture,\n    AudioAmount: props.selectedUser.audio_call_amount_formatted,\n    name: props.selectedUser.name,\n    post_id: null,\n    user_id: props.selectedUser.user_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 9\n    }\n  }) : null);\n};\nconst mapStateToPros = state => ({\n  chatMessages: state.chat.chatMessages,\n  profile: state.users.profile\n});\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(NewChatRoom));","map":{"version":3,"names":["React","useEffect","useRef","useState","Modal","Container","Row","Col","Button","Form","Image","Media","Dropdown","InputGroup","Link","useHistory","NewChatUploadModal","AltraChatAudioPlayer","SendChat","ReceivedChat","translate","t","connect","FancyBox","changeChatAudio","fetchChatMessagesStart","fetchMoreChatMessagesStart","updateChatMessagesSuccess","InfiniteScroll","configuration","io","dayjs","PrivateAudioCallModal","PrivateCallModal","saveBlockUserStart","NewChatUserInfo","useWindowDimensions","CustomLazyLoad","getSuccessNotificationMessage","createNotification","data","Picker","chatSocket","NewChatRoom","props","history","height","width","userId","localStorage","getItem","chatSocketUrl","get","skipRender","setSkipRender","requestVideoCall","setRequestVideoCall","requestAudioCall","setRequestAudioCall","newChatUpload","setNewChatUpload","message","setMessage","showEmojis","setShowEmojis","cursorPointer","setCursorPointer","isChat","setIsChat","newMsg","setNewMsg","messageField","latest","chatDate","index","rect","current","getBoundingClientRect","container","document","getElementById","bottom","dispatch","from_user_id","to_user_id","selectedUser","user_id","chatSocketConnect","disconnect","selectionEnd","fetchMoreMessages","skip","chatMessages","messages","length","take","loading","Object","keys","setShowContent","closeNewChatUploadModal","closePrivateCallModal","handleBlockUser","console","log","query","emit","commonid","myid","on","newData","handleMessageSubmit","msgAmount","fileType","chatAssets","trim","now","Date","date","getDate","slice","toLocaleString","month","getFullYear","time","format","chatData","amount","is_user_needs_pay","file_type","loggedin_user_id","chat_asset_id","map","asset","toString","date_formatted","time_formatted","amount_formatted","chat_assets","focus","scrollIntoView","handleToggleEmojis","onEmojiPick","ref","start","substring","selectionStart","end","text","native","updateChatDate","newDate","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","preventDefault","push","src","window","location","origin","picture","name","user","is_online_status","is_user_online","as","to","Toggle","variant","id","Menu","user_unique_id","style","minHeight","maxHeight","overflow","display","flexDirection","marginTop","dataLength","next","hasMore","total","loader","textAlign","inverse","padding","scrollableTarget","delegate","options","groupAll","i","zIndex","key","onSubmit","onEmojiSelect","onClickOutside","Text","Control","placeholder","value","onChange","target","autoFocus","username","userPicture","videoAmount","video_call_amount_formatted","post_id","AudioAmount","audio_call_amount_formatted","mapStateToPros","state","chat","profile","users","mapDispatchToProps"],"sources":["/home/mts/Vishal/src/components/Chat/NewChatRoom.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Modal,\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Image,\n  Media,\n  Dropdown,\n  InputGroup,\n} from \"react-bootstrap\";\nimport \"./NewChat.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport NewChatUploadModal from \"./NewChatUploadModal\";\nimport AltraChatAudioPlayer from \"../CustomComponents/AudioPlayer/AltraChatAudioPlayer\";\nimport SendChat from \"./SendChat\";\nimport ReceivedChat from \"./ReceivedChat\";\nimport { translate, t } from \"react-multi-lang\";\nimport { connect } from \"react-redux\";\nimport FancyBox from \"../NewHome/NewSingleView/FancyBox\";\nimport {\n  changeChatAudio,\n  fetchChatMessagesStart,\n  fetchMoreChatMessagesStart,\n  updateChatMessagesSuccess,\n} from \"../../store/actions/ChatAction\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport configuration from \"react-global-configuration\";\nimport io from \"socket.io-client\";\nimport dayjs from \"dayjs\";\nimport PrivateAudioCallModal from \"../helper/PrivateAudioCallModal\";\nimport PrivateCallModal from \"../helper/PrivateCallModal\";\nimport { saveBlockUserStart } from \"../../store/actions/UserAction\";\nimport NewChatUserInfo from \"./NewChatUserInfo\";\nimport useWindowDimensions from \"../helper/WindowHelper\";\nimport CustomLazyLoad from \"../helper/CustomLazyLoad\";\nimport { getSuccessNotificationMessage } from \"../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\n\nlet chatSocket;\n\nconst NewChatRoom = (props) => {\n  const history = useHistory();\n  const { height, width } = useWindowDimensions();\n\n  const userId = localStorage.getItem(\"userId\");\n\n  const chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n  const [skipRender, setSkipRender] = useState(true);\n  const [requestVideoCall, setRequestVideoCall] = useState(false);\n  const [requestAudioCall, setRequestAudioCall] = useState(false);\n  const [newChatUpload, setNewChatUpload] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [showEmojis, setShowEmojis] = useState(false);\n  const [cursorPointer, setCursorPointer] = useState(0);\n  const [isChat, setIsChat] = useState(true);\n  const [newMsg, setNewMsg] = useState(false);\n\n  const messageField = useRef();\n  const latest = useRef();\n\n  let chatDate = \"\";\n  let index = 0;\n\n  useEffect(() => {\n    if (width >= 992) {\n      setIsChat(true);\n    }\n  }, [width]);\n\n  useEffect(() => {\n    if (newMsg) {\n      const rect = latest.current.getBoundingClientRect();\n      const container = document\n        .getElementById(\"scrollableDiv\")\n        .getBoundingClientRect();\n      if (rect.bottom > container.bottom + 10) {\n        // showNewMsg(true);\n        // const notificationMessage = getSuccessNotificationMessage(\"New Message Received\");\n        // props.dispatch(createNotification(notificationMessage));\n      }\n    }\n    setNewMsg(false);\n  }, [newMsg]);\n\n  useEffect(() => {\n    props.dispatch(\n      fetchChatMessagesStart({\n        from_user_id: userId,\n        to_user_id: props.selectedUser.user_id,\n      })\n    );\n\n    chatSocketConnect(props.selectedUser.user_id);\n\n    if (chatSocket) {\n      chatSocket.disconnect();\n    }\n\n    setIsChat(true);\n\n\n    return () => {\n      chatSocket.disconnect();\n    };\n  }, [props.selectedUser.user_id]);\n\n  useEffect(() => {\n    if (!skipRender) {\n      messageField.current.selectionEnd = cursorPointer;\n    }\n  }, [cursorPointer]);\n\n  const fetchMoreMessages = () => {\n    props.dispatch(\n      fetchMoreChatMessagesStart({\n        skip: props.chatMessages.data.messages.length,\n        take: 12,\n        from_user_id: userId,\n        to_user_id: props.selectedUser.user_id,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (!skipRender && !props.chatMessages.loading) {\n      if (!Object.keys(props.chatMessages.data).length > 0) {\n        props.setShowContent(false);\n      }\n    }\n    setSkipRender(false);\n  }, [props.chatMessages]);\n\n  const closeNewChatUploadModal = () => {\n    setNewChatUpload(false);\n  };\n\n  const closePrivateCallModal = () => {\n    setRequestVideoCall(false);\n    setRequestAudioCall(false);\n  };\n\n  const handleBlockUser = () => {\n    props.dispatch(saveBlockUserStart({ user_id: props.selectedUser.user_id }));\n  };\n\n  const chatSocketConnect = (to_user_id) => {\n    // check the socket url is configured\n    console.log(\"chatSocket\", chatSocketUrl);\n    console.log(\"Input ID\", to_user_id);\n    if (chatSocketUrl) {\n      chatSocket = io(chatSocketUrl, {\n          query: `commonid:'user_id_${userId}_to_user_id_${props.selectedUser.user_id}',myid:${userId}`\n\n      });\n      console.log(\"chatSocket\", chatSocket);\n      chatSocket.emit(\"update sender\", {\n        commonid: `user_id_${userId}_to_user_id_${props.selectedUser.user_id}`,\n        myid: userId,\n      });\n      chatSocket.on(\"message\", (newData) => {\n        console.log(newData);\n        setNewMsg(true);\n        props.dispatch(updateChatMessagesSuccess(newData));\n      });\n    }\n  };\n\n  // Message Send\n  const handleMessageSubmit = ({\n    msgAmount = 0,\n    fileType = \"text\",\n    chatAssets = [],\n  }) => {\n    if (chatSocket && (message && message.trim()) || chatAssets.length > 0) {\n      const now = new Date();\n      const date = `${(\"0\" + now.getDate()).slice(-2)} ${now.toLocaleString(\n        \"default\",\n        { month: \"short\" }\n      )} ${now.getFullYear()}`;\n      const time = dayjs(now).format(\"hh:mm a\");\n\n      const chatData = {\n        from_user_id: userId,\n        to_user_id: props.selectedUser.user_id,\n        message: message,\n        amount: msgAmount,\n        is_user_needs_pay: msgAmount > 0 ? 1 : 0,\n        file_type: fileType,\n        loggedin_user_id: userId,\n        chat_asset_id: chatAssets\n          .map((asset) => asset.chat_asset_id)\n          .toString(),\n        date_formatted: date,\n        time_formatted: time,\n        amount_formatted:\n          msgAmount + \" \" + configuration.get(\"configData.token_symbol\"),\n      };\n      chatSocket.emit(\"message\", chatData);\n\n      setMessage(\"\");\n      props.dispatch(\n        updateChatMessagesSuccess({ ...chatData, chat_assets: chatAssets })\n      );\n      setNewChatUpload(false);\n      setShowEmojis(false);\n      messageField.current.focus();\n      latest.current.scrollIntoView();\n    }\n  };\n\n  const handleToggleEmojis = () => {\n    messageField.current.focus();\n    setShowEmojis(!showEmojis);\n  };\n\n  const onEmojiPick = (data) => {\n    const ref = messageField.current;\n    ref.focus();\n    const start = message.substring(0, ref.selectionStart);\n    const end = message.substring(ref.selectionStart);\n    const text = start + data.native + end;\n    setMessage(text);\n    setCursorPointer(start.length + data.native.length);\n  };\n\n  if (\n    props.chatMessages.data.messages &&\n    props.chatMessages.data.messages.length > 0\n  ) {\n    chatDate = props.chatMessages.data.messages[0].date_formatted;\n    index = props.chatMessages.data.messages.length;\n  }\n\n  const updateChatDate = (newDate) => {\n    chatDate = newDate;\n    index--;\n  };\n\n  return (\n    <>\n      <div className=\"new-chat-room-header-sec\">\n        <div\n          className=\"new-chat-room-user-details\"\n          onClick={(e) =>\n            width < 992 ? setIsChat(!isChat) : e.preventDefault()\n          }\n        >\n          <div\n            className=\"back-btn-mobile-show\"\n            onClick={() => history.push(\"/inbox\")}\n          >\n            <Image\n              className=\"back-btn-mobile\"\n              src={\n                window.location.origin + \"/assets/images/new-chat/back-icon.svg\"\n              }\n            />\n          </div>\n          <div className=\"new-chat-room-user-img-sec\">\n            <CustomLazyLoad\n              src={props.selectedUser.picture}\n              className={\"new-chat-room-user-img\"}\n            />\n          </div>\n          <div className=\"new-chat-room-user-name\">\n            <h4>{props.selectedUser.name}</h4>\n            {/* {props.chatMessages.loading ?\n              <>\n                {props.selectedUser.is_online_status == 1 ?\n                  <p>{props.selectedUser.is_user_online == 1 ? \"Online\" : \"Offline\"}</p>\n                  : \"\"}\n              </>\n              :  */}\n            <>\n              {props.chatMessages.data.user &&\n              props.chatMessages.data.user.is_online_status == 1 ? (\n                <p>\n                  {props.chatMessages.data.user.is_user_online == 1\n                    ? \"Online\"\n                    : \"Offline\"}\n                </p>\n              ) : (\n                \"\"\n              )}\n            </>\n          </div>\n        </div>\n        <div className=\"new-chat-room-user-action-btn-sec\">\n          <ul className=\"new-chat-room-user-action-btn-list list-unstyled\">\n            <Media as=\"li\">\n              <Link to=\"#\" onClick={() => setRequestAudioCall(true)}>\n                <Image\n                  className=\"new-chat-room-user-action-icon\"\n                  src={\n                    window.location.origin +\n                    \"/assets/images/new-chat/audio-call.svg\"\n                  }\n                />\n              </Link>\n            </Media>\n            <Media as=\"li\">\n              <Link to=\"#\" onClick={() => setRequestVideoCall(true)}>\n                <Image\n                  className=\"new-chat-room-user-action-icon\"\n                  src={\n                    window.location.origin +\n                    \"/assets/images/new-chat/video-call.svg\"\n                  }\n                />\n              </Link>\n            </Media>\n            <Media as=\"li\">\n              <Link to=\"#\">\n                <Dropdown className=\"new-chat-room-dropdown\">\n                  <Dropdown.Toggle\n                    variant=\"success\"\n                    id=\"dropdown-basic\"\n                    className=\"new-chat-room-dropdown-btn\"\n                  >\n                    <Image\n                      className=\"three-dots-icon\"\n                      src={\n                        window.location.origin +\n                        \"/assets/images/new-chat/three-dots.svg\"\n                      }\n                    />\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    <Link\n                      className=\"dropdown-item\"\n                      to={`/${props.selectedUser.user_unique_id}`}\n                    >\n                      {t(\"view_profile\")}\n                    </Link>\n                    <Link\n                      className=\"dropdown-item\"\n                      to=\"#\"\n                      onClick={() => handleBlockUser()}\n                    >\n                      {t(\"block_user\")}\n                    </Link>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Link>\n            </Media>\n          </ul>\n        </div>\n      </div>\n      {isChat ? (\n        <>\n          {props.chatMessages.data.messages ? (\n            <>\n              <div\n                className=\"new-chat-room-message-sec\"\n                id=\"scrollableDiv\"\n                style={{\n                  minHeight: \"calc(100vh - 220px)\",\n                  maxHeight: \"calc(100vh - 215px)\",\n                  overflow: \"auto\",\n                  display: \"flex\",\n                  flexDirection: \"column-reverse\",\n                  marginTop: \"0em\",\n                }}\n              >\n                <InfiniteScroll\n                  dataLength={props.chatMessages.data.messages.length}\n                  next={fetchMoreMessages}\n                  hasMore={\n                    props.chatMessages.data.messages.length <\n                    props.chatMessages.data.total\n                  }\n                  loader={<h4 style={{ textAlign: \"center\" }}>Loading...</h4>}\n                  inverse={true}\n                  style={{\n                    padding: \"2em\",\n                    display: \"flex\",\n                    flexDirection: \"column-reverse\",\n                    overflow: \"inherit\",\n                  }}\n                  scrollableTarget=\"scrollableDiv\"\n                >\n                  <div ref={latest} />\n                  <FancyBox\n                    delegate={\"[data-fancybox-chat]\"}\n                    options={{ groupAll: true }}\n                  >\n                    {props.chatMessages.data.messages.map((message, i) => (\n                      <>\n                        {chatDate != message.date_formatted ? (\n                          <div\n                            className=\"chat-day-container\"\n                            style={{ zIndex: index }}\n                          >\n                            <div className=\"chat-day\">\n                              {chatDate}\n                              {updateChatDate(message.date_formatted)}\n                            </div>\n                          </div>\n                        ) : null}\n                        {message.from_user_id == userId ? (\n                          <SendChat message={message} key={i} />\n                        ) : (\n                          <ReceivedChat message={message} key={i} />\n                        )}\n                      </>\n                    ))}\n                    {chatDate ? (\n                      <div\n                        className=\"chat-day-container\"\n                        style={{ zIndex: index }}\n                      >\n                        <div className=\"chat-day\">{chatDate}</div>\n                      </div>\n                    ) : null}\n                  </FancyBox>\n                </InfiniteScroll>\n              </div>\n              <div className=\"new-chat-room-input-sec\">\n                <Form\n                  className=\"new-chat-room-form\"\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    handleMessageSubmit({});\n                  }}\n                >\n                  <div\n                    className={`emoji-container ${\n                      showEmojis ? \"show\" : \"hide\"\n                    }`}\n                  >\n                    <Picker\n                      data={data}\n                      onEmojiSelect={onEmojiPick}\n                      onClickOutside={() => {\n                        console.log(\"Outside triggered\");\n                        if (showEmojis) setShowEmojis(false);\n                      }}\n                    />\n                  </div>\n                  <InputGroup className=\"mb-0\">\n                    <InputGroup.Text onClick={() => handleToggleEmojis()}>\n                      <Image\n                        className=\"new-chat-emoji-icon\"\n                        src={\n                          window.location.origin +\n                          \"/assets/images/feed-story/comments-emoji.svg\"\n                        }\n                      />\n                    </InputGroup.Text>\n                    <Form.Control\n                      ref={messageField}\n                      placeholder={t(\"type_something\")}\n                      value={!newChatUpload ? message : \"\"}\n                      onChange={(e) => setMessage(e.target.value)}\n                      // onKeyPress={e => {\n                      //   if (e.key === \"Enter\")\n                      //     handleMessageSubmit({})\n                      // }}\n                      autoFocus={true}\n                      on\n                    />\n                    <InputGroup.Text onClick={() => setNewChatUpload(true)}>\n                      <Image\n                        className=\"new-chat-file-icon\"\n                        src={\n                          window.location.origin +\n                          \"/assets/images/new-chat/attach-file.png\"\n                        }\n                      />\n                    </InputGroup.Text>\n                    <InputGroup.Text onClick={() => handleMessageSubmit({})}>\n                      <Image\n                        className=\"new-chat-send-icon\"\n                        src={\n                          window.location.origin +\n                          \"/assets/images/feed-story/comments-send.svg\"\n                        }\n                      />\n                    </InputGroup.Text>\n                  </InputGroup>\n                </Form>\n              </div>\n            </>\n          ) : null}\n        </>\n      ) : (\n        <NewChatUserInfo selectedUser={props.selectedUser} />\n      )}\n      {newChatUpload ? (\n        <NewChatUploadModal\n          newChatUpload={newChatUpload}\n          selectedUser={props.selectedUser}\n          message={message}\n          setMessage={setMessage}\n          handleMessageSubmit={handleMessageSubmit}\n          closeNewChatUploadModal={closeNewChatUploadModal}\n          setNewChatUpload={setNewChatUpload}\n        />\n      ) : null}\n      {requestVideoCall ? (\n        <PrivateCallModal\n          requestVideoCall={requestVideoCall}\n          closePrivateCallModal={closePrivateCallModal}\n          username={props.selectedUser.username}\n          userPicture={props.selectedUser.picture}\n          videoAmount={props.selectedUser.video_call_amount_formatted}\n          name={props.selectedUser.name}\n          post_id={null}\n          user_id={props.selectedUser.user_id}\n        />\n      ) : null}\n      {requestAudioCall ? (\n        <PrivateAudioCallModal\n          requestAudioCall={requestAudioCall}\n          closePrivateCallModal={closePrivateCallModal}\n          username={props.selectedUser.username}\n          userPicture={props.selectedUser.picture}\n          AudioAmount={props.selectedUser.audio_call_amount_formatted}\n          name={props.selectedUser.name}\n          post_id={null}\n          user_id={props.selectedUser.user_id}\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  chatMessages: state.chat.chatMessages,\n  profile: state.users.profile,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(NewChatRoom));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}