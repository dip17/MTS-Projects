{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { saveVeriDocFailure, saveVeriDocSuccess, fetchVeriDocumentsSuccess, fetchVeriDocumentsFailure, delVeriDocSuccess, delVeriDocFailure, verificationStatusCheckSuccess, verificationStatusCheckFailure } from \"../actions/VerificationDocumentAction\";\nimport { DEL_VERI_DOC_START, FETCH_VERI_DOCUMENT_START, SAVE_VERI_DOC_START, VERI_STATUS_CHECK_START } from \"../actions/ActionConstant\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\nfunction* fetchVeriDocsAPI() {\n  try {\n    const response = yield api.postMethod(\"documents_list\");\n    if (response.data.success) {\n      yield put(fetchVeriDocumentsSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(fetchVeriDocumentsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchVeriDocumentsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nfunction* saveVeriDocsAPI() {\n  try {\n    const inputData = yield select(state => state.docs.saveDocs.inputData);\n    const response = yield api.postMethod(\"documents_save\", inputData);\n    if (response.data.success) {\n      yield put(saveVeriDocSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(saveVeriDocFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(saveVeriDocFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nfunction* delVeriDocsAPI() {\n  try {\n    const inputData = yield select(state => state.docs.delDocs.inputData);\n    const response = yield api.postMethod(\"documents_delete\", inputData);\n    if (response.data.success) {\n      yield put(delVeriDocSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(delVeriDocFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(delVeriDocFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nfunction* checkVeriDocStatusAPI() {\n  try {\n    const inputData = yield select(state => state.docs.docStatus.inputData);\n    const response = yield api.postMethod(\"user_documents_status\", inputData);\n    if (response.data.success) {\n      yield put(verificationStatusCheckSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(verificationStatusCheckFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(verificationStatusCheckFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_VERI_DOCUMENT_START, fetchVeriDocsAPI)]);\n  yield all([yield takeLatest(SAVE_VERI_DOC_START, saveVeriDocsAPI)]);\n  yield all([yield takeLatest(DEL_VERI_DOC_START, delVeriDocsAPI)]);\n  yield all([yield takeLatest(VERI_STATUS_CHECK_START, checkVeriDocStatusAPI)]);\n}","map":{"version":3,"names":["call","select","put","takeLatest","all","api","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","saveVeriDocFailure","saveVeriDocSuccess","fetchVeriDocumentsSuccess","fetchVeriDocumentsFailure","delVeriDocSuccess","delVeriDocFailure","verificationStatusCheckSuccess","verificationStatusCheckFailure","DEL_VERI_DOC_START","FETCH_VERI_DOCUMENT_START","SAVE_VERI_DOC_START","VERI_STATUS_CHECK_START","checkLogoutStatus","fetchVeriDocsAPI","response","postMethod","data","success","notificationMessage","message","error","saveVeriDocsAPI","inputData","state","docs","saveDocs","delVeriDocsAPI","delDocs","checkVeriDocStatusAPI","docStatus","pageSaga"],"sources":["/home/mts/FX-Project/src/store/sagas/VerificationDocumentSaga.jsx"],"sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\n\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  saveVeriDocFailure,\n  saveVeriDocSuccess,\n  fetchVeriDocumentsSuccess,\n  fetchVeriDocumentsFailure,\n  delVeriDocSuccess,\n  delVeriDocFailure,\n  verificationStatusCheckSuccess,\n  verificationStatusCheckFailure,\n} from \"../actions/VerificationDocumentAction\";\nimport {\n  DEL_VERI_DOC_START,\n  FETCH_VERI_DOCUMENT_START,\n  SAVE_VERI_DOC_START,\n  VERI_STATUS_CHECK_START,\n} from \"../actions/ActionConstant\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* fetchVeriDocsAPI() {\n  try {\n    const response = yield api.postMethod(\"documents_list\");\n    if (response.data.success) {\n      yield put(fetchVeriDocumentsSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(fetchVeriDocumentsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchVeriDocumentsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* saveVeriDocsAPI() {\n  try {\n    const inputData = yield select((state) => state.docs.saveDocs.inputData);\n    const response = yield api.postMethod(\"documents_save\", inputData);\n    if (response.data.success) {\n      yield put(saveVeriDocSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(saveVeriDocFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(saveVeriDocFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* delVeriDocsAPI() {\n  try {\n    const inputData = yield select((state) => state.docs.delDocs.inputData);\n    const response = yield api.postMethod(\"documents_delete\", inputData);\n    if (response.data.success) {\n      yield put(delVeriDocSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(delVeriDocFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(delVeriDocFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* checkVeriDocStatusAPI() {\n  try {\n    const inputData = yield select((state) => state.docs.docStatus.inputData);\n    const response = yield api.postMethod(\"user_documents_status\", inputData);\n    if (response.data.success) {\n      yield put(verificationStatusCheckSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(verificationStatusCheckFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(verificationStatusCheckFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_VERI_DOCUMENT_START, fetchVeriDocsAPI)]);\n  yield all([yield takeLatest(SAVE_VERI_DOC_START, saveVeriDocsAPI)]);\n  yield all([yield takeLatest(DEL_VERI_DOC_START, delVeriDocsAPI)]);\n  yield all([yield takeLatest(VERI_STATUS_CHECK_START, checkVeriDocStatusAPI)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}