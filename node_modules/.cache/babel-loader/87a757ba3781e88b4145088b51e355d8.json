{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { FETCH_SINGLE_PAGE_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { fetchSinglePageSuccess, fetchSinglePageFailure } from \"../actions/PageAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\nfunction* fetchSinglePage() {\n  try {\n    const inputData = yield select(state => state.page.pageData.inputData);\n    const response = yield api.postMethod(\"static_pages\", inputData);\n    if (response.data.success) {\n      yield put(fetchSinglePageSuccess(response.data.data));\n    } else {\n      yield put(fetchSinglePageFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSinglePageFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_SINGLE_PAGE_START, fetchSinglePage)]);\n}","map":{"version":3,"names":["call","select","put","takeLatest","all","api","FETCH_SINGLE_PAGE_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchSinglePageSuccess","fetchSinglePageFailure","checkLogoutStatus","fetchSinglePage","inputData","state","page","pageData","response","postMethod","data","success","error","notificationMessage","message","pageSaga"],"sources":["/home/mts/FX-Project/src/store/sagas/PageSaga.jsx"],"sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { FETCH_SINGLE_PAGE_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  fetchSinglePageSuccess,\n  fetchSinglePageFailure,\n} from \"../actions/PageAction\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* fetchSinglePage() {\n  try {\n    const inputData = yield select((state) => state.page.pageData.inputData);\n    const response = yield api.postMethod(\"static_pages\", inputData);\n    if (response.data.success) {\n      yield put(fetchSinglePageSuccess(response.data.data));\n    } else {\n      yield put(fetchSinglePageFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSinglePageFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_SINGLE_PAGE_START, fetchSinglePage)]);\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,UAAU,EAAEC,GAAG,QAAQ,oBAAoB;AACvE,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,uBAAuB,QAAQ,2BAA2B;AACnE,SAASC,kBAAkB,QAAQ,oBAAoB;AACvD,SACEC,6BAA6B,EAC7BC,2BAA2B,QACtB,6CAA6C;AACpD,SACEC,sBAAsB,EACtBC,sBAAsB,QACjB,uBAAuB;AAE9B,SACEC,iBAAiB,QACZ,wBAAwB;AAE/B,UAAUC,eAAeA,CAAA,EAAG;EAC1B,IAAI;IACF,MAAMC,SAAS,GAAG,MAAMb,MAAM,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACH,SAAS,CAAC;IACxE,MAAMI,QAAQ,GAAG,MAAMb,GAAG,CAACc,UAAU,CAAC,cAAc,EAAEL,SAAS,CAAC;IAChE,IAAII,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;MACzB,MAAMnB,GAAG,CAACQ,sBAAsB,CAACQ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC;IACvD,CAAC,MAAM;MACL,MAAMlB,GAAG,CAACS,sBAAsB,CAACO,QAAQ,CAACE,IAAI,CAACE,KAAK,CAAC,CAAC;MACtD,MAAMC,mBAAmB,GAAGd,2BAA2B,CACrDS,QAAQ,CAACE,IAAI,CAACE,KAChB,CAAC;MACD,MAAMpB,GAAG,CAACU,iBAAiB,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC3C,MAAMlB,GAAG,CAACK,kBAAkB,CAACgB,mBAAmB,CAAC,CAAC;IACpD;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACd,MAAMpB,GAAG,CAACS,sBAAsB,CAACW,KAAK,CAAC,CAAC;IACxC,MAAMC,mBAAmB,GAAGd,2BAA2B,CAACa,KAAK,CAACE,OAAO,CAAC;IACtE,MAAMtB,GAAG,CAACK,kBAAkB,CAACgB,mBAAmB,CAAC,CAAC;EACpD;AACF;AAEA,eAAe,UAAUE,QAAQA,CAAA,EAAG;EAClC,MAAMrB,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACG,uBAAuB,EAAEO,eAAe,CAAC,CAAC,CAAC;AACzE"},"metadata":{},"sourceType":"module"}