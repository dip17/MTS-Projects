{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { deleteFavFailure, deleteFavSuccess, fetchFavFailure, fetchFavSuccess, saveFavFailure, saveFavSuccess } from \"../actions/FavAction\";\nimport { DELETE_FAV_START, FETCH_FAV_START, SAVE_FAV_START } from \"../actions/ActionConstant\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\nfunction* fetchFavAPI() {\n  try {\n    const inputData = yield select(state => state.fav.fav.inputData);\n    const response = yield api.postMethod(\"fav_users\", inputData);\n    if (response.data.success) {\n      yield put(fetchFavSuccess(response.data.data));\n    } else {\n      yield put(fetchFavFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchFavFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nfunction* saveFavAPI() {\n  try {\n    const inputData = yield select(state => state.fav.saveFav.inputData);\n    const response = yield api.postMethod(\"fav_users_save\", inputData);\n    if (response.data.success) {\n      yield put(saveFavSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(saveFavFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(saveFavFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nfunction* deleteFavAPI() {\n  try {\n    const inputData = yield select(state => state.fav.deleteFav.inputData);\n    const response = yield api.postMethod(\"fav_users_delete\", inputData);\n    if (response.data.success) {\n      yield put(deleteFavSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(deleteFavFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteFavFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_FAV_START, fetchFavAPI)]);\n  yield all([yield takeLatest(SAVE_FAV_START, saveFavAPI)]);\n  yield all([yield takeLatest(DELETE_FAV_START, deleteFavAPI)]);\n}","map":{"version":3,"names":["call","select","put","takeLatest","all","api","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","deleteFavFailure","deleteFavSuccess","fetchFavFailure","fetchFavSuccess","saveFavFailure","saveFavSuccess","DELETE_FAV_START","FETCH_FAV_START","SAVE_FAV_START","checkLogoutStatus","fetchFavAPI","inputData","state","fav","response","postMethod","data","success","error","notificationMessage","message","saveFavAPI","saveFav","deleteFavAPI","deleteFav","pageSaga"],"sources":["/home/mts/FX-Project/src/store/sagas/FavSaga.jsx"],"sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  deleteFavFailure,\n  deleteFavSuccess,\n  fetchFavFailure,\n  fetchFavSuccess,\n  saveFavFailure,\n  saveFavSuccess,\n} from \"../actions/FavAction\";\nimport {\n  DELETE_FAV_START,\n  FETCH_FAV_START,\n  SAVE_FAV_START,\n} from \"../actions/ActionConstant\";\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* fetchFavAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.fav.fav.inputData\n    );\n    const response = yield api.postMethod(\"fav_users\",inputData);\n    if (response.data.success) {\n      yield put(fetchFavSuccess(response.data.data));\n    } else {\n      yield put(fetchFavFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchFavFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* saveFavAPI() {\n  try {\n    const inputData = yield select((state) => state.fav.saveFav.inputData);\n    const response = yield api.postMethod(\"fav_users_save\", inputData);\n    if (response.data.success) {\n      yield put(saveFavSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(saveFavFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(saveFavFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* deleteFavAPI() {\n  try {\n    const inputData = yield select((state) => state.fav.deleteFav.inputData);\n    const response = yield api.postMethod(\"fav_users_delete\", inputData);\n    if (response.data.success) {\n      yield put(deleteFavSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(deleteFavFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteFavFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_FAV_START, fetchFavAPI)]);\n  yield all([yield takeLatest(SAVE_FAV_START, saveFavAPI)]);\n  yield all([yield takeLatest(DELETE_FAV_START, deleteFavAPI)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}