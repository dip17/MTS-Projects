{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\nimport { apiConstants } from \"./components/Constant/constants\";\nvar firebaseConfig = {\n  apiKey: apiConstants.firebase_api_key,\n  authDomain: apiConstants.firebase_auth_domain,\n  projectId: apiConstants.firebase_project_id,\n  storageBucket: apiConstants.firebase_storage_bucket,\n  messagingSenderId: apiConstants.firebase_messaging_sender_id,\n  appId: apiConstants.firebase_app_id,\n  measurementId: apiConstants.firebase_measurement_id\n};\nconst publicKey = apiConstants.firbase_public_key;\ninitializeApp(firebaseConfig);\nconst messaging = getMessaging();\nexport const requestForToken = () => {\n  return getToken(messaging, {\n    vapidKey: publicKey\n  }).then(currentToken => {\n    if (currentToken) {\n      console.log('current token for client: ', currentToken);\n      // Perform any other neccessary action with the token\n    } else {\n      // Show permission request UI\n      console.log('No registration token available. Request permission to generate one.');\n    }\n  }).catch(err => {\n    console.log('An error occurred while retrieving token. ', err);\n  });\n};\nexport const getFcmToken = async setTokenFound => {\n  let currentToken = '';\n  try {\n    currentToken = await getToken(messaging, {\n      vapidKey: publicKey\n    }).then(currentToken => {\n      if (currentToken) {\n        return currentToken;\n      } else {\n        console.log('No registration token available. Request permission to generate one.');\n      }\n    });\n    if (currentToken) {\n      setTokenFound(true);\n    } else {\n      setTokenFound(false);\n    }\n  } catch (error) {\n    console.log('An error occurred while retrieving token.', error);\n  }\n  return currentToken;\n};\nexport const onMessageListener = () => {\n  new Promise(resolve => {\n    onMessage(messaging, payload => {\n      console.log(\"payload\", payload);\n      resolve(payload);\n    });\n  });\n};","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","apiConstants","firebaseConfig","apiKey","firebase_api_key","authDomain","firebase_auth_domain","projectId","firebase_project_id","storageBucket","firebase_storage_bucket","messagingSenderId","firebase_messaging_sender_id","appId","firebase_app_id","measurementId","firebase_measurement_id","publicKey","firbase_public_key","messaging","requestForToken","vapidKey","then","currentToken","console","log","catch","err","getFcmToken","setTokenFound","error","onMessageListener","Promise","resolve","payload"],"sources":["/home/mts/FX-Project/src/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\nimport { apiConstants } from \"./components/Constant/constants\";\n\nvar firebaseConfig = {\n    apiKey: apiConstants.firebase_api_key,\n    authDomain: apiConstants.firebase_auth_domain,\n    projectId: apiConstants.firebase_project_id,\n    storageBucket: apiConstants.firebase_storage_bucket,\n    messagingSenderId: apiConstants.firebase_messaging_sender_id,\n    appId: apiConstants.firebase_app_id,\n    measurementId: apiConstants.firebase_measurement_id,\n};\n\nconst publicKey = apiConstants.firbase_public_key;\n\ninitializeApp(firebaseConfig);\n\nconst messaging = getMessaging();\n\nexport const requestForToken = () => {\n    return getToken(messaging, { vapidKey: publicKey })\n      .then((currentToken) => {\n        if (currentToken) {\n          console.log('current token for client: ', currentToken);\n          // Perform any other neccessary action with the token\n        } else {\n          // Show permission request UI\n          console.log('No registration token available. Request permission to generate one.');\n        }\n      })\n      .catch((err) => {\n        console.log('An error occurred while retrieving token. ', err);\n      });\n  };\n\nexport const getFcmToken = async (setTokenFound) => {\n    let currentToken = '';\n    try {\n        currentToken = await getToken(messaging, { vapidKey: publicKey })\n        .then((currentToken) => {\n            if (currentToken) {\n                return currentToken;\n            } else {\n                console.log('No registration token available. Request permission to generate one.');\n            }\n        })\n\n        if (currentToken) {\n            setTokenFound(true);\n        } else {\n            setTokenFound(false);\n        }\n    } catch (error) {\n      console.log('An error occurred while retrieving token.', error);\n    }\n    return currentToken;\n};\n\nexport const onMessageListener = () => {\n    new Promise((resolve) => {\n        onMessage(messaging, (payload) => {\n            console.log(\"payload\", payload)\n            resolve(payload);\n        });\n    });\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AACtE,SAASC,YAAY,QAAQ,iCAAiC;AAE9D,IAAIC,cAAc,GAAG;EACjBC,MAAM,EAAEF,YAAY,CAACG,gBAAgB;EACrCC,UAAU,EAAEJ,YAAY,CAACK,oBAAoB;EAC7CC,SAAS,EAAEN,YAAY,CAACO,mBAAmB;EAC3CC,aAAa,EAAER,YAAY,CAACS,uBAAuB;EACnDC,iBAAiB,EAAEV,YAAY,CAACW,4BAA4B;EAC5DC,KAAK,EAAEZ,YAAY,CAACa,eAAe;EACnCC,aAAa,EAAEd,YAAY,CAACe;AAChC,CAAC;AAED,MAAMC,SAAS,GAAGhB,YAAY,CAACiB,kBAAkB;AAEjDrB,aAAa,CAACK,cAAc,CAAC;AAE7B,MAAMiB,SAAS,GAAGrB,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMsB,eAAe,GAAGA,CAAA,KAAM;EACjC,OAAOrB,QAAQ,CAACoB,SAAS,EAAE;IAAEE,QAAQ,EAAEJ;EAAU,CAAC,CAAC,CAChDK,IAAI,CAAEC,YAAY,IAAK;IACtB,IAAIA,YAAY,EAAE;MAChBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,YAAY,CAAC;MACvD;IACF,CAAC,MAAM;MACL;MACAC,OAAO,CAACC,GAAG,CAAC,sEAAsE,CAAC;IACrF;EACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdH,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEE,GAAG,CAAC;EAChE,CAAC,CAAC;AACN,CAAC;AAEH,OAAO,MAAMC,WAAW,GAAG,MAAOC,aAAa,IAAK;EAChD,IAAIN,YAAY,GAAG,EAAE;EACrB,IAAI;IACAA,YAAY,GAAG,MAAMxB,QAAQ,CAACoB,SAAS,EAAE;MAAEE,QAAQ,EAAEJ;IAAU,CAAC,CAAC,CAChEK,IAAI,CAAEC,YAAY,IAAK;MACpB,IAAIA,YAAY,EAAE;QACd,OAAOA,YAAY;MACvB,CAAC,MAAM;QACHC,OAAO,CAACC,GAAG,CAAC,sEAAsE,CAAC;MACvF;IACJ,CAAC,CAAC;IAEF,IAAIF,YAAY,EAAE;MACdM,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACHA,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEK,KAAK,CAAC;EACjE;EACA,OAAOP,YAAY;AACvB,CAAC;AAED,OAAO,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;EACnC,IAAIC,OAAO,CAAEC,OAAO,IAAK;IACrBjC,SAAS,CAACmB,SAAS,EAAGe,OAAO,IAAK;MAC9BV,OAAO,CAACC,GAAG,CAAC,SAAS,EAAES,OAAO,CAAC;MAC/BD,OAAO,CAACC,OAAO,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module"}