{"ast":null,"code":"var _jsxFileName = \"/home/mts/Vishal/src/components/Model/PaymentModal/LiveStreamingPaymentModal.jsx\";\nimport React from \"react\";\nimport { InputGroup, FormControl, Image, Modal, Media, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport { useState } from \"react\";\nimport AddCardModalSec from \"./AddCardModalSec\";\nimport PaymentMethodCard from \"./PaymentMethodCard\";\nimport PaymentModelMsgSec from \"./PaymentModelMsgSec\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport { getErrorNotificationMessage } from \"../../helper/NotificationMessage\";\nimport { livePaymentPaypalStart, livePaymentStripeStart, livePaymentWalletStart } from \"../../../store/actions/LiveVideoAction\";\nimport { connect } from \"react-redux\";\nimport { translate, t } from \"react-multi-lang\";\nconst LiveStreamingPaymentModal = props => {\n  const nullData = [\"\", null, undefined, \"light\"];\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [showAddCard, setShowAddCard] = useState(false);\n  const paypalOnError = err => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n  const paypalOnSuccess = payment => {\n    setTimeout(() => {\n      props.dispatch(livePaymentPaypalStart({\n        live_video_id: props.live.live_video_id,\n        payment_id: payment.paymentID\n      }));\n    }, 1000);\n    props.closePaymentModal();\n  };\n  const paypalOnCancel = data => {\n    const notificationMessage = getErrorNotificationMessage(t(\"payment_cancelled_please_try_again\"));\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n  const handleSubmit = () => {\n    if (paymentType === \"CARD\") props.dispatch(livePaymentStripeStart({\n      live_video_id: props.live.live_video_id,\n      user_card_id: selectedCard\n    }));\n    if (paymentType === \"WALLET\") props.dispatch(livePaymentWalletStart({\n      live_video_id: props.live.live_video_id\n    }));\n    props.closePaymentModal();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment-modal-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    className: `modal-dialog-center user-list-free-modal payment-modal-res ${nullData.includes(localStorage.getItem(\"theme\")) ? \"\" : \"dark-theme-modal\"}`,\n    size: \"xl\",\n    centered: true,\n    show: props.paymentsModal,\n    onHide: props.closepaymentsModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"wallet-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"modal-close\",\n    onClick: () => props.closepaymentsModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment-modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PaymentMethodCard, {\n    paymentType: paymentType,\n    setPaymentType: setPaymentType,\n    selectedCard: selectedCard,\n    setSelectedCard: setSelectedCard,\n    setShowAddCard: setShowAddCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    xl: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, showAddCard ? /*#__PURE__*/React.createElement(AddCardModalSec, {\n    setShowAddCard: setShowAddCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(PaymentModelMsgSec, {\n    title: props.live.title,\n    message: props.live.description,\n    paymentType: paymentType,\n    amount_formatted: props.live.amount_formatted,\n    amount: props.live.amount,\n    payNowAction: handleSubmit,\n    paypalOnError: paypalOnError,\n    paypalOnSuccess: paypalOnSuccess,\n    paypalOnCancel: paypalOnCancel,\n    btnDisable: props.liveVideoDetails.buttonDisable,\n    btnText: props.liveVideoDetails.loadingButtonContent !== null ? props.liveVideoDetails.loadingButtonContent : t(\"pay\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }))))))));\n};\nconst mapStateToPros = state => ({\n  liveVideoDetails: state.liveVideo.singleLiveVideo\n});\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(LiveStreamingPaymentModal));","map":{"version":3,"names":["React","InputGroup","FormControl","Image","Modal","Media","Row","Col","Form","Button","Link","ButtonGroup","ToggleButton","useState","AddCardModalSec","PaymentMethodCard","PaymentModelMsgSec","createNotification","getErrorNotificationMessage","livePaymentPaypalStart","livePaymentStripeStart","livePaymentWalletStart","connect","translate","t","LiveStreamingPaymentModal","props","nullData","undefined","paymentType","setPaymentType","localStorage","getItem","selectedCard","setSelectedCard","showAddCard","setShowAddCard","paypalOnError","err","notificationMessage","dispatch","paypalOnSuccess","payment","setTimeout","live_video_id","live","payment_id","paymentID","closePaymentModal","paypalOnCancel","data","handleSubmit","user_card_id","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","includes","size","centered","show","paymentsModal","onHide","closepaymentsModal","Body","onClick","md","xl","title","message","description","amount_formatted","amount","payNowAction","btnDisable","liveVideoDetails","buttonDisable","btnText","loadingButtonContent","mapStateToPros","state","liveVideo","singleLiveVideo","mapDispatchToProps"],"sources":["/home/mts/Vishal/src/components/Model/PaymentModal/LiveStreamingPaymentModal.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  InputGroup,\n  FormControl,\n  Image,\n  Modal,\n  Media,\n  Row,\n  Col,\n  Form,\n  Button,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport { useState } from \"react\";\nimport AddCardModalSec from \"./AddCardModalSec\";\nimport PaymentMethodCard from \"./PaymentMethodCard\";\nimport PaymentModelMsgSec from \"./PaymentModelMsgSec\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport { getErrorNotificationMessage } from \"../../helper/NotificationMessage\";\nimport {\n  livePaymentPaypalStart,\n  livePaymentStripeStart,\n  livePaymentWalletStart,\n} from \"../../../store/actions/LiveVideoAction\";\nimport { connect } from \"react-redux\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst LiveStreamingPaymentModal = (props) => {\n\n  const nullData = [\"\", null, undefined, \"light\"];\n\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [showAddCard, setShowAddCard] = useState(false);\n\n  const paypalOnError = (err) => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnSuccess = (payment) => {\n    setTimeout(() => {\n      props.dispatch(\n        livePaymentPaypalStart({\n          live_video_id: props.live.live_video_id,\n          payment_id: payment.paymentID,\n        })\n      );\n    }, 1000);\n    props.closePaymentModal();\n  };\n\n  const paypalOnCancel = (data) => {\n    const notificationMessage = getErrorNotificationMessage(\n      t(\"payment_cancelled_please_try_again\")\n    );\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const handleSubmit = () => {\n    if (paymentType === \"CARD\")\n      props.dispatch(\n        livePaymentStripeStart({\n          live_video_id: props.live.live_video_id,\n          user_card_id: selectedCard,\n        })\n      );\n    if (paymentType === \"WALLET\")\n      props.dispatch(\n        livePaymentWalletStart({\n          live_video_id: props.live.live_video_id,\n        })\n      );\n    props.closePaymentModal();\n  };\n\n  return (\n    <>\n      <div className=\"payment-modal-sec\">\n        <Modal\n          className={`modal-dialog-center user-list-free-modal payment-modal-res ${nullData.includes(localStorage.getItem(\"theme\")) ?\n            \"\" : \"dark-theme-modal\"\n            }`}\n          size=\"xl\"\n          centered\n          show={props.paymentsModal}\n          onHide={props.closepaymentsModal}\n        >\n          {/* <Modal.Header closeButton>\n            {/* <Modal.Title>User List</Modal.Title> *\n          </Modal.Header> */}\n          <Modal.Body className=\"wallet-card-body\">\n            <Button className=\"modal-close\"\n              onClick={() => props.closepaymentsModal()}>\n              <i className=\"fa fa-times\" />\n            </Button>\n            <div className=\"payment-modal-body\">\n              <Row className=\"justify-content-between\">\n                <PaymentMethodCard\n                  paymentType={paymentType}\n                  setPaymentType={setPaymentType}\n                  selectedCard={selectedCard}\n                  setSelectedCard={setSelectedCard}\n                  setShowAddCard={setShowAddCard}\n                />\n                <Col md={12} xl={5}>\n                  {showAddCard ?\n                    <AddCardModalSec\n                      setShowAddCard={setShowAddCard}\n                    />\n                    : <PaymentModelMsgSec\n                      title={props.live.title}\n                      message={props.live.description}\n                      paymentType={paymentType}\n                      amount_formatted={props.live.amount_formatted}\n                      amount={props.live.amount}\n                      payNowAction={handleSubmit}\n                      paypalOnError={paypalOnError}\n                      paypalOnSuccess={paypalOnSuccess}\n                      paypalOnCancel={paypalOnCancel}\n                      btnDisable={props.liveVideoDetails.buttonDisable}\n                      btnText={props.liveVideoDetails.loadingButtonContent !== null\n                        ? props.liveVideoDetails.loadingButtonContent\n                        : t(\"pay\")}\n                    />\n                  }\n                </Col>\n              </Row>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  liveVideoDetails: state.liveVideo.singleLiveVideo,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(LiveStreamingPaymentModal));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}