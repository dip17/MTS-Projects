{"ast":null,"code":"import { useState, useEffect } from \"react\";\nconst useInfiniteScroll = callback => {\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  useEffect(() => {\n    if (!isFetching) return;\n    callback();\n  }, [isFetching]);\n\n  // const scrollTop =\n  //   (document.documentElement && document.documentElement.scrollTop) ||\n  //   document.body.scrollTop;\n\n  // const scrollHeight =\n  //   (document.documentElement && document.documentElement.scrollHeight) ||\n  //   document.body.scrollHeight;\n\n  // if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\n  //   setIsFetching(true);\n  // }\n\n  // function handleScroll() {\n  //   const scrollTop =\n  //     (document.documentElement && document.documentElement.scrollTop) ||\n  //     document.body.scrollTop;\n  //   const scrollHeight =\n  //     (document.documentElement && document.documentElement.scrollHeight) ||\n  //     document.body.scrollHeight;\n  //   if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\n  //     setIsFetching(true);\n  //   }\n  // }\n\n  function handleScroll() {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || isFetching) return;\n    setIsFetching(true);\n  }\n  return [isFetching, setIsFetching];\n};\nexport default useInfiniteScroll;","map":{"version":3,"names":["useState","useEffect","useInfiniteScroll","callback","isFetching","setIsFetching","window","addEventListener","handleScroll","removeEventListener","innerHeight","document","documentElement","scrollTop","offsetHeight"],"sources":["/home/mts/Vishal/src/components/helper/useInfiniteScroll.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useInfiniteScroll = (callback) => {\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  useEffect(() => {\n    if (!isFetching) return;\n    callback();\n  }, [isFetching]);\n\n  // const scrollTop =\n  //   (document.documentElement && document.documentElement.scrollTop) ||\n  //   document.body.scrollTop;\n\n  // const scrollHeight =\n  //   (document.documentElement && document.documentElement.scrollHeight) ||\n  //   document.body.scrollHeight;\n\n  // if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\n  //   setIsFetching(true);\n  // }\n\n  // function handleScroll() {\n  //   const scrollTop =\n  //     (document.documentElement && document.documentElement.scrollTop) ||\n  //     document.body.scrollTop;\n  //   const scrollHeight =\n  //     (document.documentElement && document.documentElement.scrollHeight) ||\n  //     document.body.scrollHeight;\n  //   if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\n  //     setIsFetching(true);\n  //   }\n  // }\n\n  function handleScroll() {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n        document.documentElement.offsetHeight ||\n      isFetching\n    )\n      return;\n    setIsFetching(true);\n  }\n\n  return [isFetching, setIsFetching];\n};\n\nexport default useInfiniteScroll;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACdK,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEC,YAAY,CAAC;IAC/C,OAAO,MAAMF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAED,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,UAAU,EAAE;IACjBD,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACC,UAAU,CAAC,CAAC;;EAEhB;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASI,YAAYA,CAAA,EAAG;IACtB,IACEF,MAAM,CAACI,WAAW,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS,KACrDF,QAAQ,CAACC,eAAe,CAACE,YAAY,IACvCV,UAAU,EAEV;IACFC,aAAa,CAAC,IAAI,CAAC;EACrB;EAEA,OAAO,CAACD,UAAU,EAAEC,aAAa,CAAC;AACpC,CAAC;AAED,eAAeH,iBAAiB"},"metadata":{},"sourceType":"module"}