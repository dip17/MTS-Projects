{"ast":null,"code":"var _jsxFileName = \"/home/mts/FX-Project/src/components/Verification/VerificationCodeInput.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport OtpInput from \"react-otp-input\";\nconst VerificationCodeInput = ({\n  length,\n  label,\n  loading,\n  onComplete,\n  labelClassName,\n  autoFocus = false\n}) => {\n  const [code, setCode] = useState(\"\");\n  useEffect(() => {\n    if (code.length === length) onComplete(code);else onComplete(\"\");\n  }, [code]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"code-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"lable\", {\n    className: labelClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"code-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OtpInput, {\n    numInputs: length,\n    className: \"otp\",\n    value: code,\n    onChange: val => setCode(val),\n    isInputNum: true,\n    shouldAutoFocus: autoFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default VerificationCodeInput;","map":{"version":3,"names":["React","useState","useRef","useEffect","OtpInput","VerificationCodeInput","length","label","loading","onComplete","labelClassName","autoFocus","code","setCode","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","numInputs","value","onChange","val","isInputNum","shouldAutoFocus"],"sources":["/home/mts/FX-Project/src/components/Verification/VerificationCodeInput.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport OtpInput from \"react-otp-input\";\n\nconst VerificationCodeInput = ({\n  length,\n  label,\n  loading,\n  onComplete,\n  labelClassName,\n  autoFocus=false\n}) => {\n  const [code, setCode] = useState(\"\");\n\n  useEffect(() => {\n    if (code.length === length)\n      onComplete(code);\n    else\n      onComplete(\"\");\n  }, [code]);\n\n  return (\n    <>\n      <div className=\"code-input\">\n        <lable className={labelClassName}>{label}</lable>\n        <div className=\"code-inputs\">\n          <OtpInput\n            numInputs={length}\n            className=\"otp\"\n            value={code}\n            onChange={val => setCode(val)}\n            isInputNum={true}\n            shouldAutoFocus={autoFocus}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default VerificationCodeInput;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,MAAMC,qBAAqB,GAAGA,CAAC;EAC7BC,MAAM;EACNC,KAAK;EACLC,OAAO;EACPC,UAAU;EACVC,cAAc;EACdC,SAAS,GAAC;AACZ,CAAC,KAAK;EACJ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpCE,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,CAACN,MAAM,KAAKA,MAAM,EACxBG,UAAU,CAACG,IAAI,CAAC,CAAC,KAEjBH,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC,EAAE,CAACG,IAAI,CAAC,CAAC;EAEV,oBACEZ,KAAA,CAAAc,aAAA,CAAAd,KAAA,CAAAe,QAAA,qBACEf,KAAA,CAAAc,aAAA;IAAKE,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBtB,KAAA,CAAAc,aAAA;IAAOE,SAAS,EAAEN,cAAe;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEf,KAAa,CAAC,eACjDP,KAAA,CAAAc,aAAA;IAAKE,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BtB,KAAA,CAAAc,aAAA,CAACV,QAAQ;IACPmB,SAAS,EAAEjB,MAAO;IAClBU,SAAS,EAAC,KAAK;IACfQ,KAAK,EAAEZ,IAAK;IACZa,QAAQ,EAAEC,GAAG,IAAIb,OAAO,CAACa,GAAG,CAAE;IAC9BC,UAAU,EAAE,IAAK;IACjBC,eAAe,EAAEjB,SAAU;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5B,CACE,CACF,CACL,CAAC;AAEP,CAAC;AAED,eAAejB,qBAAqB"},"metadata":{},"sourceType":"module"}