{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { ADD_KYC_DOCUMENT_START, GET_KYC_DOCUMENT_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { addKycDocumentSuccess, addKycDocumentFailure, getKycDocumentSuccess, getKycDocumentFailure } from \"../actions/KycDocumentAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\nfunction* addKycDocumentAPI() {\n  try {\n    const inputData = yield select(state => state.kycDocument.addKycDocInput.inputData);\n    if (inputData.document_id && inputData.document_file) {\n      const response = yield api.postMethod(\"documents_save\", inputData);\n      yield put(addKycDocumentSuccess(response.data.data));\n      if (response.data.success) {\n        const notificationMessage = getSuccessNotificationMessage(response.data.message);\n        yield put(createNotification(notificationMessage));\n      } else {\n        yield put(addKycDocumentFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(response.data.error);\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } else {\n      let errorMessage = \"Please upload the file and choose document\";\n      yield put(addKycDocumentFailure(errorMessage));\n      const notificationMessage = getErrorNotificationMessage(errorMessage);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addKycDocumentFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nfunction* getKycDocumentAPI() {\n  try {\n    const response = yield api.postMethod(\"documents_list\");\n    yield put(getKycDocumentSuccess(response.data.data));\n    if (response.data.success) {} else {\n      yield put(getKycDocumentFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(getKycDocumentFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nexport default function* pageSaga() {\n  yield all([yield takeLatest(ADD_KYC_DOCUMENT_START, addKycDocumentAPI)]);\n  yield all([yield takeLatest(GET_KYC_DOCUMENT_START, getKycDocumentAPI)]);\n}","map":{"version":3,"names":["call","select","put","takeLatest","all","api","ADD_KYC_DOCUMENT_START","GET_KYC_DOCUMENT_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","addKycDocumentSuccess","addKycDocumentFailure","getKycDocumentSuccess","getKycDocumentFailure","checkLogoutStatus","addKycDocumentAPI","inputData","state","kycDocument","addKycDocInput","document_id","document_file","response","postMethod","data","success","notificationMessage","message","error","errorMessage","getKycDocumentAPI","pageSaga"],"sources":["/home/mts/FX-Project/src/store/sagas/KycDocumentSaga.jsx"],"sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  ADD_KYC_DOCUMENT_START,\n  GET_KYC_DOCUMENT_START,\n} from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  addKycDocumentSuccess,\n  addKycDocumentFailure,\n  getKycDocumentSuccess,\n  getKycDocumentFailure,\n} from \"../actions/KycDocumentAction\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* addKycDocumentAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.kycDocument.addKycDocInput.inputData\n    );\n    if (inputData.document_id && inputData.document_file) {\n      const response = yield api.postMethod(\"documents_save\", inputData);\n      yield put(addKycDocumentSuccess(response.data.data));\n      if (response.data.success) {\n        const notificationMessage = getSuccessNotificationMessage(\n          response.data.message\n        );\n        yield put(createNotification(notificationMessage));\n      } else {\n        yield put(addKycDocumentFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } else {\n      let errorMessage = \"Please upload the file and choose document\";\n      yield put(addKycDocumentFailure(errorMessage));\n      const notificationMessage = getErrorNotificationMessage(errorMessage);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addKycDocumentFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* getKycDocumentAPI() {\n  try {\n    const response = yield api.postMethod(\"documents_list\");\n    yield put(getKycDocumentSuccess(response.data.data));\n    if (response.data.success) {\n    } else {\n      yield put(getKycDocumentFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(getKycDocumentFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(ADD_KYC_DOCUMENT_START, addKycDocumentAPI)]);\n  yield all([yield takeLatest(GET_KYC_DOCUMENT_START, getKycDocumentAPI)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}