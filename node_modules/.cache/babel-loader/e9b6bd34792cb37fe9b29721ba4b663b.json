{"ast":null,"code":"var _jsxFileName = \"/home/mts/Vishal/src/components/LiveStreaming/LiveStreamingCard.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Container, Row, Col, Button, Form, Image, Media } from \"react-bootstrap\";\nimport \"./LiveStreaming.css\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { translate, t } from \"react-multi-lang\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport { liveVideoEndStart } from \"../../store/actions/LiveVideoAction\";\nimport configuration from \"react-global-configuration\";\nimport useAgoraRTC from \"../../hooks/useAgoraRTC\";\nimport AgoraMediaPlayer from \"../helper/AgoraMediaPlayer\";\nconst rtcclient = AgoraRTC.createClient({\n  mode: \"live\",\n  codec: \"vp8\"\n});\nconst LiveStreamingCard = props => {\n  const {\n    localAudioTrack,\n    localVideoTrack,\n    leaveRtcChannel,\n    join,\n    joinState,\n    remoteUsers,\n    isStreamEnded,\n    muteAudio,\n    muteVideo,\n    mediaStatus,\n    toggleFullScreen\n  } = useAgoraRTC(rtcclient);\n\n  // async function startBasicCall() {\n  //   try {\n  //     rtc.client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n  //     client.setClientRole(options.role);\n\n  //     rtc.client.on(\"user-unpublished\", async (user, mediaType) => {\n  //       if (mediaType === \"video\") {\n  //         $(\"#agora_local\").hide();\n  //         $(\"#agora_profile_placeholder\").show();\n  //       }\n  //     });\n\n  //     rtc.client.on(\"user-published\", async (user, mediaType) => {\n  //       // Subscribe to a remote user.\n  //       await rtc.client.subscribe(user, mediaType);\n  //       console.log(\"subscribe success\");\n\n  //       // If the subscribed track is video.\n  //       if (mediaType === \"video\") {\n  //         $(\"#agora_local\").show();\n  //         $(\"#agora_profile_placeholder\").hide();\n  //         // Get `RemoteVideoTrack` in the `user` object.\n  //         const remoteVideoTrack = user.videoTrack;\n\n  //         remoteVideoTrack.play(\"agora_local\", { fit: \"cover\", mirror: true });\n  //         // Or just pass the ID of the DIV container.\n  //         // remoteVideoTrack.play(playerContainer.id);\n  //       }\n\n  //       props.dispatch(\n  //         liveViewerUpdateStart({\n  //           live_video_id: props.liveVideoDetails.live_video_id,\n  //         })\n  //       );\n\n  //       // If the subscribed track is audio.\n  //       if (mediaType === \"audio\") {\n  //         // Get `RemoteAudioTrack` in the `user` object.\n  //         const remoteAudioTrack = user.audioTrack;\n  //         // Play the audio track. No need to pass any DOM element.\n  //         remoteAudioTrack.play();\n  //       }\n  //     });\n\n  //     const uid = await rtc.client.join(options.appId, options.channel, options.token || null, options.uid || null);\n\n  //     if (options.role === \"host\") {\n\n  //       // Create an audio track from the audio sampled by a microphone.\n  //       rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n  //       // Create a video track from the video captured by a camera.\n  //       rtc.localVideoTrack = await AgoraRTC.createCameraVideoTrack();\n  //       // Publish the local audio and video tracks to the channel.\n  //       rtc.localVideoTrack.play(\"agora_local\", { fit: \"cover\", mirror: true });\n\n  //       await rtc.client.publish([rtc.localAudioTrack, rtc.localVideoTrack]);\n  //     }\n  //   }\n  //   catch (exception) {\n  //     console.log(exception);\n  //   }\n\n  // }\n\n  // async function leaveCall() {\n\n  //   if (options.role === \"host\") {\n  //     // Destroy the local audio and video tracks.\n  //     rtc.localAudioTrack.close();\n  //     rtc.localVideoTrack.close();\n\n  //     // Traverse all remote users.\n  //     rtc.client.remoteUsers.forEach(user => {\n  //       // Destroy the dynamically created DIV container.\n  //       const playerContainer = document.getElementById(user.uid);\n  //       playerContainer && playerContainer.remove();\n  //     });\n\n  //     props.dispatch(\n  //       liveVideoEndStart({\n  //         live_video_id: props.liveVideoDetails.live_video_id,\n  //         // s3_file: s3_file,\n  //       })\n  //     );\n  //   } else {\n  //     // Leave the channel.\n  //     await rtc.client.leave();\n  //     window.location.assign(\"/live-videos\");\n  //   }\n  // }\n\n  // async function muteAudio() {\n  //   if (!rtc.localAudioTrack) return;\n  //   if (localTrackState.audioTrackEnabled == true) {\n  //     await rtc.localAudioTrack.setEnabled(false);\n  //     localTrackState.audioTrackEnabled = false;\n  //     $(\"#mute-audio\").hide();\n  //     $(\"#unmute-audio\").show();\n  //   } else {\n  //     await rtc.localAudioTrack.setEnabled(true);\n  //     localTrackState.audioTrackEnabled = true;\n  //     $(\"#mute-audio\").show();\n  //     $(\"#unmute-audio\").hide();\n  //   }\n  // }\n\n  // async function muteVideo() {\n  //   if (!rtc.localVideoTrack) return;\n  //   if (localTrackState.videoTrackEnabled == true) {\n  //     await rtc.localVideoTrack.setEnabled(false);\n  //     localTrackState.videoTrackEnabled = false;\n  //     $(\"#mute-video\").hide();\n  //     $(\"#unmute-video\").show();\n  //     $(\"#agora_local\").hide();\n  //     $(\"#agora_profile_placeholder\").show();\n  //   } else {\n  //     await rtc.localVideoTrack.setEnabled(true);\n  //     localTrackState.videoTrackEnabled = true;\n  //     $(\"#mute-video\").show();\n  //     $(\"#unmute-video\").hide();\n  //     $(\"#agora_local\").show();\n  //     $(\"#agora_profile_placeholder\").hide();\n  //   }\n  // }\n\n  // async function fullScreen() {\n  //   if (localTrackState.fullScreenEnabled == true) {\n  //     //localTrackState.fullScreenEnabled = false;\n  //     $(\"#video-container\").addClass(\"live-streaming-card\");\n  //     $(\"#video-container\").removeClass(\"full-streaming-card\");\n  //     $(\"#agora_local\").toggleClass(\"agora-container-full\");\n  //     $(\"#agora_profile_placeholder\").toggleClass(\"live-streaming-full-bg-img-sec\");\n  //     document.body.style.overflow = \"auto\";\n  //   } else {\n  //    // localTrackState.fullScreenEnabled = true;\n  //     $(\"#video-container\").addClass(\"full-streaming-card\");\n  //     $(\"#video-container\").removeClass(\"live-streaming-card\");\n  //     $(\"#agora_local\").toggleClass(\"agora-container-full\");\n  //     $(\"#agora_profile_placeholder\").toggleClass(\"live-streaming-full-bg-img-sec\");\n  //     document.body.style.overflow = \"hidden\";\n  //   }\n  // }\n\n  const handleJoin = () => {\n    let joinResponse = join(configuration.get(\"configData.agora_app_id\"), props.liveVideoDetails.virtual_id, props.liveVideoDetails.agora_token ? props.liveVideoDetails.agora_token : null, props.isOwner === true ? \"host\" : \"audience\", \"live\");\n  };\n  const history = useHistory();\n  useEffect(() => {\n    handleJoin();\n    return () => {\n      if (window.confirm(\"Are you sure? want to leave the stream?\")) {\n        console.log(history.location);\n        window.location.assign(history.location.pathname);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (isStreamEnded) {\n      props.dispatch(liveVideoEndStart({\n        live_video_id: props.liveVideoDetails.live_video_id,\n        isOwner: props.isOwner\n      }));\n    }\n  }, [isStreamEnded]);\n  const leaveCall = async () => {\n    await leaveRtcChannel(props.isOwner);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: mediaStatus.video.fullScreen ? \"full-streaming-card\" : \"live-streaming-card\",\n    id: \"video-container\",\n    style: {\n      backgroundImage: `url(${props.liveVideoDetails.snapshot})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, props.isOwner && joinState && /*#__PURE__*/React.createElement(AgoraMediaPlayer, {\n    videoTrack: localVideoTrack,\n    useClassname: mediaStatus.video.fullScreen ? \"agora-container-full\" : \"agora-container\",\n    useId: \"agora_local\",\n    mirror: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }), remoteUsers.length > 0 && remoteUsers.map(user => /*#__PURE__*/React.createElement(AgoraMediaPlayer, {\n    videoTrack: user.videoTrack,\n    audioTrack: user.audioTrack,\n    useClassname: mediaStatus.video.fullScreen ? \"agora-container-full\" : \"agora-container\",\n    useId: \"agora_local\",\n    mirror: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-bg-img-sec\",\n    id: \"agora_profile_placeholder\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"live-streaming-bg-img\",\n    src: props.liveVideoDetails.snapshot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  })), props.isOwner ? joinState && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-close-btn-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"close-btn\",\n    onClick: () => leaveCall(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"close-btn-icon\",\n    src: window.location.origin + \"/assets/images/live-streaming/close.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }, t(\"close\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-modal-action-btn-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"modal-action-btn\",\n    onClick: () => muteAudio(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }, mediaStatus.audio.muted ? /*#__PURE__*/React.createElement(Image, {\n    className: \"modal-action-btn-icon\",\n    src: window.location.origin + \"/assets/images/live-streaming/audio-mute.svg\"\n    //  id=\"mute-audio\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(Image, {\n    className: \"modal-action-btn-icon\",\n    src: window.location.origin + \"/assets/images/live-streaming/audio-icon.svg\"\n    // id=\"unmute-audio\"\n    //  style={{ display: \"none\" }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"modal-action-btn\",\n    onClick: () => muteVideo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, mediaStatus.video.muted ? /*#__PURE__*/React.createElement(Image, {\n    className: \"modal-action-btn-icon\",\n    src: window.location.origin + \"/assets/images/live-streaming/video-hide.svg\"\n    //id=\"mute-video\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(Image, {\n    className: \"modal-action-btn-icon\",\n    src: window.location.origin + \"/assets/images/live-streaming/video.svg\"\n    // style={{ display: \"none\" }}\n    // id=\"unmute-video\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 25\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-send-tip-sec\",\n    onClick: () => props.setTipModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"live-streaming-send-tip-icon\",\n    src: window.location.origin + \"/assets/images/live-streaming/send-tip.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"send-tip-btn hoverColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, t(\"send_tips\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-full-screen-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"close-btn\",\n    onClick: () => toggleFullScreen(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"live-streaming-full-screen-icon\",\n    src: window.location.origin + \"/assets/images/live-streaming/full-screen.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  })))));\n};\nconst mapStateToPros = state => ({\n  // liveVideo: state.liveVideo.singleLiveVideo,\n});\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(LiveStreamingCard));","map":{"version":3,"names":["React","useEffect","useState","Modal","Container","Row","Col","Button","Form","Image","Media","Link","useHistory","useLocation","connect","translate","t","AgoraRTC","liveVideoEndStart","configuration","useAgoraRTC","AgoraMediaPlayer","rtcclient","createClient","mode","codec","LiveStreamingCard","props","localAudioTrack","localVideoTrack","leaveRtcChannel","join","joinState","remoteUsers","isStreamEnded","muteAudio","muteVideo","mediaStatus","toggleFullScreen","handleJoin","joinResponse","get","liveVideoDetails","virtual_id","agora_token","isOwner","history","window","confirm","console","log","location","assign","pathname","dispatch","live_video_id","leaveCall","createElement","Fragment","className","video","fullScreen","id","style","backgroundImage","snapshot","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","videoTrack","useClassname","useId","mirror","length","map","user","audioTrack","display","src","onClick","origin","as","audio","muted","setTipModal","mapStateToPros","state","mapDispatchToProps"],"sources":["/home/mts/Vishal/src/components/LiveStreaming/LiveStreamingCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Modal,\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  Image,\n  Media,\n} from \"react-bootstrap\";\nimport \"./LiveStreaming.css\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { translate, t } from \"react-multi-lang\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport { liveVideoEndStart } from \"../../store/actions/LiveVideoAction\";\nimport configuration from \"react-global-configuration\";\nimport useAgoraRTC from \"../../hooks/useAgoraRTC\";\nimport AgoraMediaPlayer from \"../helper/AgoraMediaPlayer\";\n\nconst rtcclient = AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\n\nconst LiveStreamingCard = (props) => {\n  const {\n    localAudioTrack,\n    localVideoTrack,\n    leaveRtcChannel,\n    join,\n    joinState,\n    remoteUsers,\n    isStreamEnded,\n    muteAudio,\n    muteVideo,\n    mediaStatus,\n    toggleFullScreen,\n  } = useAgoraRTC(rtcclient);\n\n  // async function startBasicCall() {\n  //   try {\n  //     rtc.client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n  //     client.setClientRole(options.role);\n\n  //     rtc.client.on(\"user-unpublished\", async (user, mediaType) => {\n  //       if (mediaType === \"video\") {\n  //         $(\"#agora_local\").hide();\n  //         $(\"#agora_profile_placeholder\").show();\n  //       }\n  //     });\n\n  //     rtc.client.on(\"user-published\", async (user, mediaType) => {\n  //       // Subscribe to a remote user.\n  //       await rtc.client.subscribe(user, mediaType);\n  //       console.log(\"subscribe success\");\n\n  //       // If the subscribed track is video.\n  //       if (mediaType === \"video\") {\n  //         $(\"#agora_local\").show();\n  //         $(\"#agora_profile_placeholder\").hide();\n  //         // Get `RemoteVideoTrack` in the `user` object.\n  //         const remoteVideoTrack = user.videoTrack;\n\n  //         remoteVideoTrack.play(\"agora_local\", { fit: \"cover\", mirror: true });\n  //         // Or just pass the ID of the DIV container.\n  //         // remoteVideoTrack.play(playerContainer.id);\n  //       }\n\n  //       props.dispatch(\n  //         liveViewerUpdateStart({\n  //           live_video_id: props.liveVideoDetails.live_video_id,\n  //         })\n  //       );\n\n  //       // If the subscribed track is audio.\n  //       if (mediaType === \"audio\") {\n  //         // Get `RemoteAudioTrack` in the `user` object.\n  //         const remoteAudioTrack = user.audioTrack;\n  //         // Play the audio track. No need to pass any DOM element.\n  //         remoteAudioTrack.play();\n  //       }\n  //     });\n\n  //     const uid = await rtc.client.join(options.appId, options.channel, options.token || null, options.uid || null);\n\n  //     if (options.role === \"host\") {\n\n  //       // Create an audio track from the audio sampled by a microphone.\n  //       rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n  //       // Create a video track from the video captured by a camera.\n  //       rtc.localVideoTrack = await AgoraRTC.createCameraVideoTrack();\n  //       // Publish the local audio and video tracks to the channel.\n  //       rtc.localVideoTrack.play(\"agora_local\", { fit: \"cover\", mirror: true });\n\n  //       await rtc.client.publish([rtc.localAudioTrack, rtc.localVideoTrack]);\n  //     }\n  //   }\n  //   catch (exception) {\n  //     console.log(exception);\n  //   }\n\n  // }\n\n  // async function leaveCall() {\n\n  //   if (options.role === \"host\") {\n  //     // Destroy the local audio and video tracks.\n  //     rtc.localAudioTrack.close();\n  //     rtc.localVideoTrack.close();\n\n  //     // Traverse all remote users.\n  //     rtc.client.remoteUsers.forEach(user => {\n  //       // Destroy the dynamically created DIV container.\n  //       const playerContainer = document.getElementById(user.uid);\n  //       playerContainer && playerContainer.remove();\n  //     });\n\n  //     props.dispatch(\n  //       liveVideoEndStart({\n  //         live_video_id: props.liveVideoDetails.live_video_id,\n  //         // s3_file: s3_file,\n  //       })\n  //     );\n  //   } else {\n  //     // Leave the channel.\n  //     await rtc.client.leave();\n  //     window.location.assign(\"/live-videos\");\n  //   }\n  // }\n\n  // async function muteAudio() {\n  //   if (!rtc.localAudioTrack) return;\n  //   if (localTrackState.audioTrackEnabled == true) {\n  //     await rtc.localAudioTrack.setEnabled(false);\n  //     localTrackState.audioTrackEnabled = false;\n  //     $(\"#mute-audio\").hide();\n  //     $(\"#unmute-audio\").show();\n  //   } else {\n  //     await rtc.localAudioTrack.setEnabled(true);\n  //     localTrackState.audioTrackEnabled = true;\n  //     $(\"#mute-audio\").show();\n  //     $(\"#unmute-audio\").hide();\n  //   }\n  // }\n\n  // async function muteVideo() {\n  //   if (!rtc.localVideoTrack) return;\n  //   if (localTrackState.videoTrackEnabled == true) {\n  //     await rtc.localVideoTrack.setEnabled(false);\n  //     localTrackState.videoTrackEnabled = false;\n  //     $(\"#mute-video\").hide();\n  //     $(\"#unmute-video\").show();\n  //     $(\"#agora_local\").hide();\n  //     $(\"#agora_profile_placeholder\").show();\n  //   } else {\n  //     await rtc.localVideoTrack.setEnabled(true);\n  //     localTrackState.videoTrackEnabled = true;\n  //     $(\"#mute-video\").show();\n  //     $(\"#unmute-video\").hide();\n  //     $(\"#agora_local\").show();\n  //     $(\"#agora_profile_placeholder\").hide();\n  //   }\n  // }\n\n  // async function fullScreen() {\n  //   if (localTrackState.fullScreenEnabled == true) {\n  //     //localTrackState.fullScreenEnabled = false;\n  //     $(\"#video-container\").addClass(\"live-streaming-card\");\n  //     $(\"#video-container\").removeClass(\"full-streaming-card\");\n  //     $(\"#agora_local\").toggleClass(\"agora-container-full\");\n  //     $(\"#agora_profile_placeholder\").toggleClass(\"live-streaming-full-bg-img-sec\");\n  //     document.body.style.overflow = \"auto\";\n  //   } else {\n  //    // localTrackState.fullScreenEnabled = true;\n  //     $(\"#video-container\").addClass(\"full-streaming-card\");\n  //     $(\"#video-container\").removeClass(\"live-streaming-card\");\n  //     $(\"#agora_local\").toggleClass(\"agora-container-full\");\n  //     $(\"#agora_profile_placeholder\").toggleClass(\"live-streaming-full-bg-img-sec\");\n  //     document.body.style.overflow = \"hidden\";\n  //   }\n  // }\n\n  const handleJoin = () => {\n    let joinResponse = join(\n      configuration.get(\"configData.agora_app_id\"),\n      props.liveVideoDetails.virtual_id,\n      props.liveVideoDetails.agora_token\n        ? props.liveVideoDetails.agora_token\n        : null,\n      props.isOwner === true ? \"host\" : \"audience\",\n      \"live\"\n    );\n  };\n\n  const history = useHistory();\n\n  useEffect(() => {\n    handleJoin();\n\n    return () => {\n      if (window.confirm(\"Are you sure? want to leave the stream?\")) {\n        console.log(history.location);\n        window.location.assign(history.location.pathname);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isStreamEnded) {\n      props.dispatch(\n        liveVideoEndStart({\n          live_video_id: props.liveVideoDetails.live_video_id,\n          isOwner: props.isOwner,\n        })\n      );\n    }\n  }, [isStreamEnded]);\n\n  const leaveCall = async () => {\n    await leaveRtcChannel(props.isOwner);\n  };\n\n  return (\n    <>\n      <div\n        className={\n          mediaStatus.video.fullScreen\n            ? \"full-streaming-card\"\n            : \"live-streaming-card\"\n        }\n        id=\"video-container\"\n        style={{ backgroundImage: `url(${props.liveVideoDetails.snapshot})` }}\n      >\n        {/* <div id=\"agora_local\" className=\"agora-container\" /> */}\n        {props.isOwner && joinState && (\n          <AgoraMediaPlayer\n            videoTrack={localVideoTrack}\n            useClassname={\n              mediaStatus.video.fullScreen\n                ? \"agora-container-full\"\n                : \"agora-container\"\n            }\n            useId=\"agora_local\"\n            mirror={true}\n          ></AgoraMediaPlayer>\n        )}\n\n        {remoteUsers.length > 0 &&\n          remoteUsers.map((user) => (\n            <AgoraMediaPlayer\n              videoTrack={user.videoTrack}\n              audioTrack={user.audioTrack}\n              useClassname={\n                mediaStatus.video.fullScreen\n                  ? \"agora-container-full\"\n                  : \"agora-container\"\n              }\n              useId=\"agora_local\"\n              mirror={true}\n            ></AgoraMediaPlayer>\n          ))}\n\n        <div\n          className=\"live-streaming-bg-img-sec\"\n          id=\"agora_profile_placeholder\"\n          style={{ display: \"none\" }}\n        >\n          <Image\n            className=\"live-streaming-bg-img\"\n            src={props.liveVideoDetails.snapshot}\n          />\n        </div>\n\n        {props.isOwner ? (\n          joinState && (\n            <>\n              <div className=\"live-streaming-close-btn-sec\">\n                <Button className=\"close-btn\" onClick={() => leaveCall()}>\n                  <Image\n                    className=\"close-btn-icon\"\n                    src={\n                      window.location.origin +\n                      \"/assets/images/live-streaming/close.svg\"\n                    }\n                  />\n                  <span>{t(\"close\")}</span>\n                </Button>\n              </div>\n              <div className=\"live-streaming-modal-action-btn-sec\">\n                <ul className=\"list-unstyled\">\n                  <Media as=\"li\">\n                    <Button\n                      className=\"modal-action-btn\"\n                      onClick={() => muteAudio()}\n                    >\n                      {mediaStatus.audio.muted ? (\n                        <Image\n                          className=\"modal-action-btn-icon\"\n                          src={\n                            window.location.origin +\n                            \"/assets/images/live-streaming/audio-mute.svg\"\n                          }\n                          //  id=\"mute-audio\"\n                        />\n                      ) : (\n                        <Image\n                          className=\"modal-action-btn-icon\"\n                          src={\n                            window.location.origin +\n                            \"/assets/images/live-streaming/audio-icon.svg\"\n                          }\n                          // id=\"unmute-audio\"\n                          //  style={{ display: \"none\" }}\n                        />\n                      )}\n                    </Button>\n                  </Media>\n                  <Media as=\"li\">\n                    <Button\n                      className=\"modal-action-btn\"\n                      onClick={() => muteVideo()}\n                    >\n                      {mediaStatus.video.muted ? (\n                        <Image\n                          className=\"modal-action-btn-icon\"\n                          src={\n                            window.location.origin +\n                            \"/assets/images/live-streaming/video-hide.svg\"\n                          }\n                          //id=\"mute-video\"\n                        />\n                      ) : (\n                        <Image\n                          className=\"modal-action-btn-icon\"\n                          src={\n                            window.location.origin +\n                            \"/assets/images/live-streaming/video.svg\"\n                          }\n                          // style={{ display: \"none\" }}\n                          // id=\"unmute-video\"\n                        />\n                      )}\n                    </Button>\n                  </Media>\n                  {/* <Media as=\"li\">\n                <Button className=\"modal-action-btn\">\n                  <Image\n                    className=\"modal-action-btn-icon\"\n                    src={\n                      window.location.origin + \"/assets/images/live-streaming/refresh-icon.svg\"\n                    }\n                  />\n                </Button>\n              </Media> */}\n                </ul>\n              </div>\n            </>\n          )\n        ) : (\n          <div\n            className=\"live-streaming-send-tip-sec\"\n            onClick={() => props.setTipModal(true)}\n          >\n            <Image\n              className=\"live-streaming-send-tip-icon\"\n              src={\n                window.location.origin +\n                \"/assets/images/live-streaming/send-tip.svg\"\n              }\n            />\n            <Button className=\"send-tip-btn hoverColor\">{t(\"send_tips\")}</Button>\n          </div>\n        )}\n        <div className=\"live-streaming-full-screen-sec\">\n          <Button className=\"close-btn\" onClick={() => toggleFullScreen()}>\n            <Image\n              className=\"live-streaming-full-screen-icon\"\n              src={\n                window.location.origin +\n                \"/assets/images/live-streaming/full-screen.svg\"\n              }\n            />\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  // liveVideo: state.liveVideo.singleLiveVideo,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(LiveStreamingCard));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}