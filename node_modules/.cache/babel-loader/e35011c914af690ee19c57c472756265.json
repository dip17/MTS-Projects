{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _Hashtag = require('./Hashtag');\nvar _Hashtag2 = _interopRequireDefault(_Hashtag);\nvar _hashtagStrategy = require('./hashtagStrategy');\nvar _hashtagStrategy2 = _interopRequireDefault(_hashtagStrategy);\nvar _styles = {\n  \"hashtag\": \"draftJsHashtagPlugin__hashtag__1wMVC\"\n};\nvar _styles2 = _interopRequireDefault(_styles);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar defaultTheme = {\n  hashtag: _styles2.default.hashtag\n};\nexports.default = function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // Styles are overwritten instead of merged as merging causes a lot of confusion.\n  //\n  // Why? Because when merging a developer needs to know all of the underlying\n  // styles which needs a deep dive into the code. Merging also makes it prone to\n  // errors when upgrading as basically every styling change would become a major\n  // breaking change. 1px of an increased padding can break a whole layout.\n  var theme = config.theme ? config.theme : defaultTheme;\n  var DecoratedHashtag = function DecoratedHashtag(props) {\n    return _react2.default.createElement(_Hashtag2.default, _extends({}, props, {\n      theme: theme\n    }));\n  };\n  return {\n    decorators: [{\n      strategy: _hashtagStrategy2.default,\n      component: DecoratedHashtag\n    }]\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","require","_react2","_interopRequireDefault","_Hashtag","_Hashtag2","_hashtagStrategy","_hashtagStrategy2","_styles","_styles2","obj","__esModule","default","defaultTheme","hashtag","config","undefined","theme","DecoratedHashtag","props","createElement","decorators","strategy","component"],"sources":["/home/mts/Vishal/node_modules/draft-js-hashtag-plugin/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Hashtag = require('./Hashtag');\n\nvar _Hashtag2 = _interopRequireDefault(_Hashtag);\n\nvar _hashtagStrategy = require('./hashtagStrategy');\n\nvar _hashtagStrategy2 = _interopRequireDefault(_hashtagStrategy);\n\nvar _styles = {\n  \"hashtag\": \"draftJsHashtagPlugin__hashtag__1wMVC\"\n};\n\nvar _styles2 = _interopRequireDefault(_styles);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultTheme = {\n  hashtag: _styles2.default.hashtag\n};\n\nexports.default = function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // Styles are overwritten instead of merged as merging causes a lot of confusion.\n  //\n  // Why? Because when merging a developer needs to know all of the underlying\n  // styles which needs a deep dive into the code. Merging also makes it prone to\n  // errors when upgrading as basically every styling change would become a major\n  // breaking change. 1px of an increased padding can break a whole layout.\n  var theme = config.theme ? config.theme : defaultTheme;\n  var DecoratedHashtag = function DecoratedHashtag(props) {\n    return _react2.default.createElement(_Hashtag2.default, _extends({}, props, { theme: theme }));\n  };\n  return {\n    decorators: [{\n      strategy: _hashtagStrategy2.default,\n      component: DecoratedHashtag\n    }]\n  };\n};"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAM,IAAI,UAAUC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;IAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;MAAE,IAAIV,MAAM,CAACY,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;QAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;MAAE;IAAE;EAAE;EAAE,OAAOL,MAAM;AAAE,CAAC;AAEhQ,IAAIS,MAAM,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE7B,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAM,CAAC;AAE5C,IAAII,QAAQ,GAAGH,OAAO,CAAC,WAAW,CAAC;AAEnC,IAAII,SAAS,GAAGF,sBAAsB,CAACC,QAAQ,CAAC;AAEhD,IAAIE,gBAAgB,GAAGL,OAAO,CAAC,mBAAmB,CAAC;AAEnD,IAAIM,iBAAiB,GAAGJ,sBAAsB,CAACG,gBAAgB,CAAC;AAEhE,IAAIE,OAAO,GAAG;EACZ,SAAS,EAAE;AACb,CAAC;AAED,IAAIC,QAAQ,GAAGN,sBAAsB,CAACK,OAAO,CAAC;AAE9C,SAASL,sBAAsBA,CAACO,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;AAE9F,IAAIG,YAAY,GAAG;EACjBC,OAAO,EAAEL,QAAQ,CAACG,OAAO,CAACE;AAC5B,CAAC;AAED3B,OAAO,CAACyB,OAAO,GAAG,YAAY;EAC5B,IAAIG,MAAM,GAAGtB,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKuB,SAAS,GAAGvB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;EAEnF;EACA;EACA;EACA;EACA;EACA;EACA,IAAIwB,KAAK,GAAGF,MAAM,CAACE,KAAK,GAAGF,MAAM,CAACE,KAAK,GAAGJ,YAAY;EACtD,IAAIK,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,KAAK,EAAE;IACtD,OAAOjB,OAAO,CAACU,OAAO,CAACQ,aAAa,CAACf,SAAS,CAACO,OAAO,EAAEvB,QAAQ,CAAC,CAAC,CAAC,EAAE8B,KAAK,EAAE;MAAEF,KAAK,EAAEA;IAAM,CAAC,CAAC,CAAC;EAChG,CAAC;EACD,OAAO;IACLI,UAAU,EAAE,CAAC;MACXC,QAAQ,EAAEf,iBAAiB,CAACK,OAAO;MACnCW,SAAS,EAAEL;IACb,CAAC;EACH,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}