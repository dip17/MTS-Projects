{"ast":null,"code":"var _jsxFileName = \"/home/mts/FX-Project/src/components/Post/postMentions/PostEditor.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport { EditorState, convertToRaw, Modifier } from \"draft-js\";\nimport Editor from \"draft-js-plugins-editor\";\nimport createMentionPlugin, { defaultSuggestionsFilter } from \"draft-js-mention-plugin\";\nimport \"draft-js/dist/Draft.css\";\nimport \"draft-js-mention-plugin/lib/plugin.css\";\nimport { connect } from \"react-redux\";\nimport { searchUserStart } from \"../../../store/actions/HomeAction\";\nimport { translate, t } from \"react-multi-lang\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { Picker, EmojiData } from \"emoji-mart3\";\nimport \"emoji-mart3/css/emoji-mart.css\";\nimport { useEffect } from \"react\";\nimport createHashtagPlugin from \"draft-js-hashtag-plugin\";\nimport \"draft-js-hashtag-plugin/lib/plugin.css\";\nimport createLinkifyPlugin from \"draft-js-linkify-plugin\";\nimport \"draft-js-linkify-plugin/lib/plugin.css\";\nimport draftToHtml from \"draftjs-to-html\";\nconst hashtagPlugin = createHashtagPlugin();\nconst linkifyPlugin = createLinkifyPlugin();\nconst mentionPlugin = createMentionPlugin();\nconst {\n  MentionSuggestions\n} = mentionPlugin;\nconst plugins = [mentionPlugin, linkifyPlugin, hashtagPlugin];\nexport const PostEditor = props => {\n  const [skipRender, setSkipRender] = useState(true);\n  const [mentionSearch, setMentionSearch] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [mentions, setMentions] = useState([]);\n  const [focusStyle, setFocusStyle] = useState(false);\n\n  // Draft-JS editor configuration\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n  useEffect(() => {\n    if (props.editorState) {\n      const content = convertToRaw(props.editorState.getCurrentContent()).blocks;\n      props.getEditorRawContent(content.map(block => !block.text.trim() && \"\\n\" || block.text).join(\"\\n\"));\n      props.getEditorHtmlContent(tohtml());\n    }\n  }, []);\n  const editor = useRef(null);\n  const tohtml = () => {\n    const contentState = props.editorState ? props.editorState.getCurrentContent() : editorState.getCurrentContent();\n    const raw = convertToRaw(contentState);\n    var host = window.location.origin;\n\n    // let options = {\n    //   entityStyleFn: (entity) => {\n    //     const entityType = entity.get(\"type\").toLowerCase();\n    //     console.log(entity)\n    //     if (entityType === \"mention\") {\n    //       const data = entity.getData();\n    //       return {\n    //         element: \"a\",\n    //         attributes: {\n    //           href: `${host}/${data.mention.link}`,\n    //         },\n    //         style: {\n    //           paddingRight: \"5px\",\n    //         },\n    //       };\n    //     }\n    //   },\n    // };\n\n    // let html =  stateToHTML(contentState, options);\n\n    // console.log(html)\n\n    const hashConfig = {\n      trigger: \"#\",\n      separator: \" \"\n    };\n    const customEntityTransform = (entity, text) => {\n      if (entity.type !== \"mention\") return;\n      return `<a href=\"${host}/${entity.data.mention.link}\">${text}</a>`;\n    };\n    const rawContentState = raw;\n    return draftToHtml(rawContentState, hashConfig, false, customEntityTransform);\n\n    //return stateToHTML(contentState, options);\n  };\n\n  // Check editor text for mentions\n  const onSearchChange = ({\n    value\n  }) => {\n    setMentionSearch(value);\n    if (value.length >= 2) {\n      props.dispatch(searchUserStart({\n        key: value\n      }));\n    } else {\n      setMentions([]);\n    }\n  };\n  useEffect(() => {\n    if (!skipRender && !props.searchUser.loading && Object.keys(props.searchUser.data) && props.searchUser.data.users) {\n      let fetchedData = props.searchUser.data.users;\n      var newData = [];\n      fetchedData && fetchedData.map(user => newData.push({\n        id: user.user_id,\n        name: `@${user.name}`,\n        link: user.user_unique_id,\n        avatar: user.picture\n      }));\n      setMentions(newData);\n    }\n  }, [props.searchUser]);\n  useEffect(() => {\n    if (!skipRender) {\n      setSuggestions(defaultSuggestionsFilter(mentionSearch, mentions));\n    }\n    setSkipRender(false);\n  }, [mentions]);\n  const onAddMention = () => {};\n\n  // Focus on editor window\n  const focusEditor = () => {\n    // editor.current.focus();\n    setFocusStyle(true);\n  };\n\n  //blur handler\n  const blurEditor = () => {\n    setFocusStyle(false);\n  };\n  const handleChange = editorState => {\n    props.setEditorState != undefined ? props.setEditorState(editorState) : setEditorState(editorState);\n    props.getEditorHtmlContent(tohtml());\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onFocus: () => focusEditor(),\n    onBlur: () => blurEditor(),\n    className: focusStyle ? \"hasFocus active\" : \"hasFocus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Editor, {\n    ref: editor,\n    editorState: props.editorState != undefined ? props.editorState : editorState,\n    plugins: plugins,\n    onChange: editorState => handleChange(editorState),\n    placeholder: props.placeholder ? props.placeholder : t(\"new_post_placeholder\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MentionSuggestions, {\n    onSearchChange: onSearchChange,\n    suggestions: mentions,\n    onAddMention: onAddMention,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }));\n};\nconst mapStateToPros = state => ({\n  searchUser: state.home.searchUser\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(PostEditor));","map":{"version":3,"names":["React","useState","useRef","EditorState","convertToRaw","Modifier","Editor","createMentionPlugin","defaultSuggestionsFilter","connect","searchUserStart","translate","t","stateToHTML","Picker","EmojiData","useEffect","createHashtagPlugin","createLinkifyPlugin","draftToHtml","hashtagPlugin","linkifyPlugin","mentionPlugin","MentionSuggestions","plugins","PostEditor","props","skipRender","setSkipRender","mentionSearch","setMentionSearch","suggestions","setSuggestions","mentions","setMentions","focusStyle","setFocusStyle","editorState","setEditorState","createEmpty","content","getCurrentContent","blocks","getEditorRawContent","map","block","text","trim","join","getEditorHtmlContent","tohtml","editor","contentState","raw","host","window","location","origin","hashConfig","trigger","separator","customEntityTransform","entity","type","data","mention","link","rawContentState","onSearchChange","value","length","dispatch","key","searchUser","loading","Object","keys","users","fetchedData","newData","user","push","id","user_id","name","user_unique_id","avatar","picture","onAddMention","focusEditor","blurEditor","handleChange","undefined","createElement","onFocus","onBlur","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","placeholder","mapStateToPros","state","home","mapDispatchToProps"],"sources":["/home/mts/FX-Project/src/components/Post/postMentions/PostEditor.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { EditorState, convertToRaw, Modifier } from \"draft-js\";\nimport Editor from \"draft-js-plugins-editor\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"draft-js-mention-plugin\";\nimport \"draft-js/dist/Draft.css\";\nimport \"draft-js-mention-plugin/lib/plugin.css\";\nimport { connect } from \"react-redux\";\nimport { searchUserStart } from \"../../../store/actions/HomeAction\";\nimport { translate, t } from \"react-multi-lang\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { Picker, EmojiData } from \"emoji-mart3\";\nimport \"emoji-mart3/css/emoji-mart.css\";\nimport { useEffect } from \"react\";\nimport createHashtagPlugin from \"draft-js-hashtag-plugin\";\nimport \"draft-js-hashtag-plugin/lib/plugin.css\";\nimport createLinkifyPlugin from \"draft-js-linkify-plugin\";\nimport \"draft-js-linkify-plugin/lib/plugin.css\";\nimport draftToHtml from \"draftjs-to-html\";\n\nconst hashtagPlugin = createHashtagPlugin();\nconst linkifyPlugin = createLinkifyPlugin();\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [mentionPlugin, linkifyPlugin, hashtagPlugin];\n\nexport const PostEditor = (props) => {\n  const [skipRender, setSkipRender] = useState(true);\n  const [mentionSearch, setMentionSearch] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  const [mentions, setMentions] = useState([]);\n\n  const [focusStyle, setFocusStyle] = useState(false);\n\n  // Draft-JS editor configuration\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n\n  useEffect(() => {\n    if (props.editorState) {\n      const content = convertToRaw(\n        props.editorState.getCurrentContent()\n      ).blocks;\n      props.getEditorRawContent(\n        content\n          .map((block) => (!block.text.trim() && \"\\n\") || block.text)\n          .join(\"\\n\")\n      );\n      props.getEditorHtmlContent(tohtml());\n    }\n  }, []);\n\n  const editor = useRef(null);\n\n  const tohtml = () => {\n    const contentState = props.editorState\n      ? props.editorState.getCurrentContent()\n      : editorState.getCurrentContent();\n    const raw = convertToRaw(contentState);\n\n    var host = window.location.origin;\n\n    // let options = {\n    //   entityStyleFn: (entity) => {\n    //     const entityType = entity.get(\"type\").toLowerCase();\n    //     console.log(entity)\n    //     if (entityType === \"mention\") {\n    //       const data = entity.getData();\n    //       return {\n    //         element: \"a\",\n    //         attributes: {\n    //           href: `${host}/${data.mention.link}`,\n    //         },\n    //         style: {\n    //           paddingRight: \"5px\",\n    //         },\n    //       };\n    //     }\n    //   },\n    // };\n\n    // let html =  stateToHTML(contentState, options);\n\n    // console.log(html)\n\n    const hashConfig = {\n      trigger: \"#\",\n      separator: \" \",\n    };\n\n    const customEntityTransform = (entity, text) => {\n      if (entity.type !== \"mention\") return;\n      return `<a href=\"${host}/${entity.data.mention.link}\">${text}</a>`;\n    };\n\n    const rawContentState = raw;\n\n    return draftToHtml(\n      rawContentState,\n      hashConfig,\n      false,\n      customEntityTransform\n    );\n\n    //return stateToHTML(contentState, options);\n  };\n\n  // Check editor text for mentions\n  const onSearchChange = ({ value }) => {\n    setMentionSearch(value);\n    if (value.length >= 2) {\n      props.dispatch(searchUserStart({ key: value }));\n    } else {\n      setMentions([]);\n    }\n  };\n\n  useEffect(() => {\n    if (!skipRender && !props.searchUser.loading && Object.keys(props.searchUser.data)\n      && props.searchUser.data.users) {\n      let fetchedData = props.searchUser.data.users;\n      var newData = [];\n      fetchedData &&\n        fetchedData.map((user) =>\n          newData.push({\n            id: user.user_id,\n            name: `@${user.name}`,\n            link: user.user_unique_id,\n            avatar: user.picture,\n          })\n        );\n      setMentions(newData);\n    }\n  }, [props.searchUser]);\n\n  useEffect(() => {\n    if (!skipRender) {\n      setSuggestions(defaultSuggestionsFilter(mentionSearch, mentions));\n    }\n    setSkipRender(false);\n  }, [mentions]);\n\n  const onAddMention = () => { };\n\n  // Focus on editor window\n  const focusEditor = () => {\n    // editor.current.focus();\n    setFocusStyle(true);\n  };\n\n  //blur handler\n  const blurEditor = () => {\n    setFocusStyle(false);\n  };\n\n  const handleChange = (editorState) => {\n    props.setEditorState != undefined\n      ? props.setEditorState(editorState)\n      : setEditorState(editorState);\n    props.getEditorHtmlContent(tohtml());\n  };\n\n  return (\n    <div\n      onFocus={() => focusEditor()}\n      onBlur={() => blurEditor()}\n      className={focusStyle ? \"hasFocus active\" : \"hasFocus\"}\n    >\n      <Editor\n        ref={editor}\n        editorState={\n          props.editorState != undefined ? props.editorState : editorState\n        }\n        plugins={plugins}\n        onChange={(editorState) => handleChange(editorState)}\n        placeholder={\n          props.placeholder ? props.placeholder : t(\"new_post_placeholder\")\n        }\n      ></Editor>\n      <MentionSuggestions\n        onSearchChange={onSearchChange}\n        suggestions={mentions}\n        onAddMention={onAddMention}\n      />\n    </div>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  searchUser: state.home.searchUser,\n});\nconst mapDispatchToProps = (dispatch) => {\n  return { dispatch };\n};\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(PostEditor));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}