{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport { changePasswordSuccess, changePasswordFailure } from \"../actions/UserAction\";\nimport api from \"../../Environment\";\nimport { CHANGE_PASSWORD_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\nfunction* changePasswordAPI() {\n  try {\n    const inputData = yield select(state => state.changePassword.inputData.data);\n    const response = yield api.postMethod(\"change_password\", inputData);\n    yield put(changePasswordSuccess(response.data.data));\n    if (response.data.success) {\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/logout\");\n    } else {\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(changePasswordFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nexport default function* pageSaga() {\n  yield all([yield takeLatest(CHANGE_PASSWORD_START, changePasswordAPI)]);\n}","map":{"version":3,"names":["call","select","put","takeLatest","all","changePasswordSuccess","changePasswordFailure","api","CHANGE_PASSWORD_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","checkLogoutStatus","changePasswordAPI","inputData","state","changePassword","data","response","postMethod","success","notificationMessage","message","window","location","assign","error","pageSaga"],"sources":["/home/mts/FX-Project/src/store/sagas/ChangePasswordSaga.jsx"],"sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport {\n  changePasswordSuccess,\n  changePasswordFailure,\n} from \"../actions/UserAction\";\nimport api from \"../../Environment\";\nimport { CHANGE_PASSWORD_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* changePasswordAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.changePassword.inputData.data\n    );\n    const response = yield api.postMethod(\"change_password\", inputData);\n    yield put(changePasswordSuccess(response.data.data));\n    if (response.data.success) {\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      \n        window.location.assign(\"/logout\");\n    \n    } else {\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(changePasswordFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(CHANGE_PASSWORD_START, changePasswordAPI)]);\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,UAAU,EAAEC,GAAG,QAAQ,oBAAoB;AACvE,SACEC,qBAAqB,EACrBC,qBAAqB,QAChB,uBAAuB;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,kBAAkB,QAAQ,oBAAoB;AACvD,SACEC,6BAA6B,EAC7BC,2BAA2B,QACtB,6CAA6C;AAEpD,SACEC,iBAAiB,QACZ,wBAAwB;AAE/B,UAAUC,iBAAiBA,CAAA,EAAG;EAC5B,IAAI;IACF,MAAMC,SAAS,GAAG,MAAMb,MAAM,CAC3Bc,KAAK,IAAKA,KAAK,CAACC,cAAc,CAACF,SAAS,CAACG,IAC5C,CAAC;IACD,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,UAAU,CAAC,iBAAiB,EAAEL,SAAS,CAAC;IACnE,MAAMZ,GAAG,CAACG,qBAAqB,CAACa,QAAQ,CAACD,IAAI,CAACA,IAAI,CAAC,CAAC;IACpD,IAAIC,QAAQ,CAACD,IAAI,CAACG,OAAO,EAAE;MACzB,MAAMC,mBAAmB,GAAGX,6BAA6B,CACvDQ,QAAQ,CAACD,IAAI,CAACK,OAChB,CAAC;MACD,MAAMpB,GAAG,CAACO,kBAAkB,CAACY,mBAAmB,CAAC,CAAC;MAEhDE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,SAAS,CAAC;IAErC,CAAC,MAAM;MACL,MAAMJ,mBAAmB,GAAGV,2BAA2B,CACrDO,QAAQ,CAACD,IAAI,CAACS,KAChB,CAAC;MACD,MAAMxB,GAAG,CAACU,iBAAiB,CAACM,QAAQ,CAACD,IAAI,CAAC,CAAC;MAC3C,MAAMf,GAAG,CAACO,kBAAkB,CAACY,mBAAmB,CAAC,CAAC;IACpD;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMxB,GAAG,CAACI,qBAAqB,CAACoB,KAAK,CAAC,CAAC;IACvC,MAAML,mBAAmB,GAAGV,2BAA2B,CAACe,KAAK,CAACJ,OAAO,CAAC;IACtE,MAAMpB,GAAG,CAACO,kBAAkB,CAACY,mBAAmB,CAAC,CAAC;EACpD;AACF;AAEA,eAAe,UAAUM,QAAQA,CAAA,EAAG;EAClC,MAAMvB,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACK,qBAAqB,EAAEK,iBAAiB,CAAC,CAAC,CAAC;AACzE"},"metadata":{},"sourceType":"module"}